//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.MyMES.ServiceHostingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceHostingService.IServiceHostingSVC")]
    public interface IServiceHostingSVC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/ADD", ReplyAction="http://tempuri.org/IServiceHostingSVC/ADDResponse")]
        double ADD(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/ADD", ReplyAction="http://tempuri.org/IServiceHostingSVC/ADDResponse")]
        System.Threading.Tasks.Task<double> ADDAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/substruction", ReplyAction="http://tempuri.org/IServiceHostingSVC/substructionResponse")]
        double substruction(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/substruction", ReplyAction="http://tempuri.org/IServiceHostingSVC/substructionResponse")]
        System.Threading.Tasks.Task<double> substructionAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/multiplication", ReplyAction="http://tempuri.org/IServiceHostingSVC/multiplicationResponse")]
        double multiplication(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/multiplication", ReplyAction="http://tempuri.org/IServiceHostingSVC/multiplicationResponse")]
        System.Threading.Tasks.Task<double> multiplicationAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/division", ReplyAction="http://tempuri.org/IServiceHostingSVC/divisionResponse")]
        double division(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceHostingSVC/division", ReplyAction="http://tempuri.org/IServiceHostingSVC/divisionResponse")]
        System.Threading.Tasks.Task<double> divisionAsync(double x, double y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceHostingSVCChannel : App.MyMES.ServiceHostingService.IServiceHostingSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceHostingSVCClient : System.ServiceModel.ClientBase<App.MyMES.ServiceHostingService.IServiceHostingSVC>, App.MyMES.ServiceHostingService.IServiceHostingSVC {
        
        public ServiceHostingSVCClient() {
        }
        
        public ServiceHostingSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceHostingSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceHostingSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceHostingSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ADD(double x, double y) {
            return base.Channel.ADD(x, y);
        }
        
        public System.Threading.Tasks.Task<double> ADDAsync(double x, double y) {
            return base.Channel.ADDAsync(x, y);
        }
        
        public double substruction(double x, double y) {
            return base.Channel.substruction(x, y);
        }
        
        public System.Threading.Tasks.Task<double> substructionAsync(double x, double y) {
            return base.Channel.substructionAsync(x, y);
        }
        
        public double multiplication(double x, double y) {
            return base.Channel.multiplication(x, y);
        }
        
        public System.Threading.Tasks.Task<double> multiplicationAsync(double x, double y) {
            return base.Channel.multiplicationAsync(x, y);
        }
        
        public double division(double x, double y) {
            return base.Channel.division(x, y);
        }
        
        public System.Threading.Tasks.Task<double> divisionAsync(double x, double y) {
            return base.Channel.divisionAsync(x, y);
        }
    }
}
