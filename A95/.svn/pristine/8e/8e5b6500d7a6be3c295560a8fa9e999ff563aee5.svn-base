//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.MyMES.mesUnitService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="mesUnitService.ImesUnitSVC")]
    public interface ImesUnitSVC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Insert", ReplyAction="http://tempuri.org/ImesUnitSVC/InsertResponse")]
        string Insert(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Insert", ReplyAction="http://tempuri.org/ImesUnitSVC/InsertResponse")]
        System.Threading.Tasks.Task<string> InsertAsync(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Delete", ReplyAction="http://tempuri.org/ImesUnitSVC/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Delete", ReplyAction="http://tempuri.org/ImesUnitSVC/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Update", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateResponse")]
        string Update(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Update", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdatePart", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdatePartResponse")]
        string UpdatePart(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdatePart", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdatePartResponse")]
        System.Threading.Tasks.Task<string> UpdatePartAsync(App.Model.mesUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Get", ReplyAction="http://tempuri.org/ImesUnitSVC/GetResponse")]
        App.Model.mesUnit Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/Get", ReplyAction="http://tempuri.org/ImesUnitSVC/GetResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnit> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/GetUnit", ReplyAction="http://tempuri.org/ImesUnitSVC/GetUnitResponse")]
        App.Model.mesUnit GetUnit(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/GetUnit", ReplyAction="http://tempuri.org/ImesUnitSVC/GetUnitResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnit> GetUnitAsync(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/ListAll", ReplyAction="http://tempuri.org/ImesUnitSVC/ListAllResponse")]
        App.Model.mesUnit[] ListAll(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/ListAll", ReplyAction="http://tempuri.org/ImesUnitSVC/ListAllResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnit[]> ListAllAsync(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdatePlasma", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdatePlasmaResponse")]
        string UpdatePlasma(string SN, int StationID, string LastUpdate, int LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdatePlasma", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdatePlasmaResponse")]
        System.Threading.Tasks.Task<string> UpdatePlasmaAsync(string SN, int StationID, string LastUpdate, int LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdateUnitStateID", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateUnitStateIDResponse")]
        string UpdateUnitStateID(App.Model.mesUnit v_mesUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdateUnitStateID", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateUnitStateIDResponse")]
        System.Threading.Tasks.Task<string> UpdateUnitStateIDAsync(App.Model.mesUnit v_mesUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdateTTUnitStateID", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateTTUnitStateIDResponse")]
        string UpdateTTUnitStateID(App.Model.mesUnit v_mesUnit, string PanelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitSVC/UpdateTTUnitStateID", ReplyAction="http://tempuri.org/ImesUnitSVC/UpdateTTUnitStateIDResponse")]
        System.Threading.Tasks.Task<string> UpdateTTUnitStateIDAsync(App.Model.mesUnit v_mesUnit, string PanelID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImesUnitSVCChannel : App.MyMES.mesUnitService.ImesUnitSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImesUnitSVCClient : System.ServiceModel.ClientBase<App.MyMES.mesUnitService.ImesUnitSVC>, App.MyMES.mesUnitService.ImesUnitSVC {
        
        public ImesUnitSVCClient() {
        }
        
        public ImesUnitSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImesUnitSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImesUnitSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImesUnitSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insert(App.Model.mesUnit model) {
            return base.Channel.Insert(model);
        }
        
        public System.Threading.Tasks.Task<string> InsertAsync(App.Model.mesUnit model) {
            return base.Channel.InsertAsync(model);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public string Update(App.Model.mesUnit model) {
            return base.Channel.Update(model);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(App.Model.mesUnit model) {
            return base.Channel.UpdateAsync(model);
        }
        
        public string UpdatePart(App.Model.mesUnit model) {
            return base.Channel.UpdatePart(model);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePartAsync(App.Model.mesUnit model) {
            return base.Channel.UpdatePartAsync(model);
        }
        
        public App.Model.mesUnit Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnit> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public App.Model.mesUnit GetUnit(string SN) {
            return base.Channel.GetUnit(SN);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnit> GetUnitAsync(string SN) {
            return base.Channel.GetUnitAsync(SN);
        }
        
        public App.Model.mesUnit[] ListAll(string S_Where) {
            return base.Channel.ListAll(S_Where);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnit[]> ListAllAsync(string S_Where) {
            return base.Channel.ListAllAsync(S_Where);
        }
        
        public string UpdatePlasma(string SN, int StationID, string LastUpdate, int LineID) {
            return base.Channel.UpdatePlasma(SN, StationID, LastUpdate, LineID);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePlasmaAsync(string SN, int StationID, string LastUpdate, int LineID) {
            return base.Channel.UpdatePlasmaAsync(SN, StationID, LastUpdate, LineID);
        }
        
        public string UpdateUnitStateID(App.Model.mesUnit v_mesUnit) {
            return base.Channel.UpdateUnitStateID(v_mesUnit);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUnitStateIDAsync(App.Model.mesUnit v_mesUnit) {
            return base.Channel.UpdateUnitStateIDAsync(v_mesUnit);
        }
        
        public string UpdateTTUnitStateID(App.Model.mesUnit v_mesUnit, string PanelID) {
            return base.Channel.UpdateTTUnitStateID(v_mesUnit, PanelID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTTUnitStateIDAsync(App.Model.mesUnit v_mesUnit, string PanelID) {
            return base.Channel.UpdateTTUnitStateIDAsync(v_mesUnit, PanelID);
        }
    }
}
