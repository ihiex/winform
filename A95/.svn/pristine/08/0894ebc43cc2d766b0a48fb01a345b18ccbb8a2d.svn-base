//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.MyMES.PartSelectService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PartSelectService.IPartSelectSVC")]
    public interface IPartSelectSVC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSNResponse")]
        App.MyMES.PartSelectService.Get_CreatePackageSNResponse Get_CreatePackageSN(App.MyMES.PartSelectService.Get_CreatePackageSNRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSNResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreatePackageSNResponse> Get_CreatePackageSNAsync(App.MyMES.PartSelectService.Get_CreatePackageSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN_Siemens", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN_SiemensResponse")]
        App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensResponse Get_CreatePackageSN_Siemens(App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN_Siemens", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreatePackageSN_SiemensResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensResponse> Get_CreatePackageSN_SiemensAsync(App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PackageData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PackageDataResponse")]
        System.Data.DataSet Get_PackageData(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PackageData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PackageDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_PackageDataAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PalletData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PalletDataResponse")]
        System.Data.DataSet Get_PalletData(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PalletData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PalletDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_PalletDataAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_SearchData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_SearchDataResponse")]
        App.MyMES.PartSelectService.Get_SearchDataResponse Get_SearchData(App.MyMES.PartSelectService.Get_SearchDataRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_SearchData", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_SearchDataResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_SearchDataResponse> Get_SearchDataAsync(App.MyMES.PartSelectService.Get_SearchDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspCallProcedure", ReplyAction="http://tempuri.org/IPartSelectSVC/uspCallProcedureResponse")]
        App.MyMES.PartSelectService.uspCallProcedureResponse uspCallProcedure(App.MyMES.PartSelectService.uspCallProcedureRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspCallProcedure", ReplyAction="http://tempuri.org/IPartSelectSVC/uspCallProcedureResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.uspCallProcedureResponse> uspCallProcedureAsync(App.MyMES.PartSelectService.uspCallProcedureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PartParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PartParameterResponse")]
        System.Data.DataSet Get_PartParameter(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_PartParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_PartParameterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_PartParameterAsync(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetBomPartInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetBomPartInfoResponse")]
        System.Data.DataSet MESGetBomPartInfo(int ParentPartID, int StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetBomPartInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetBomPartInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> MESGetBomPartInfoAsync(int ParentPartID, int StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckMianSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckMianSNResponse")]
        string MESAssembleCheckMianSN(string ProductionOrderID, int LineID, int StationID, int StationTypeID, string SN, bool COF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckMianSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckMianSNResponse")]
        System.Threading.Tasks.Task<string> MESAssembleCheckMianSNAsync(string ProductionOrderID, int LineID, int StationID, int StationTypeID, string SN, bool COF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckOtherSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckOtherSNResponse")]
        string MESAssembleCheckOtherSN(string SN, string PartID, bool COF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckOtherSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckOtherSNResponse")]
        System.Threading.Tasks.Task<string> MESAssembleCheckOtherSNAsync(string SN, string PartID, bool COF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckVirtualSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckVirtualSNResponse")]
        string MESAssembleCheckVirtualSN(string SN, string PartID, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESAssembleCheckVirtualSN", ReplyAction="http://tempuri.org/IPartSelectSVC/MESAssembleCheckVirtualSNResponse")]
        System.Threading.Tasks.Task<string> MESAssembleCheckVirtualSNAsync(string SN, string PartID, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESModifyUnitDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/MESModifyUnitDetailResponse")]
        void MESModifyUnitDetail(int UnitID, string FileName, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESModifyUnitDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/MESModifyUnitDetailResponse")]
        System.Threading.Tasks.Task MESModifyUnitDetailAsync(int UnitID, string FileName, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetUnitUnitStateID", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetUnitUnitStateIDResponse")]
        string MESGetUnitUnitStateID(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetUnitUnitStateID", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetUnitUnitStateIDResponse")]
        System.Threading.Tasks.Task<string> MESGetUnitUnitStateIDAsync(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetStationTypeParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetStationTypeParameterResponse")]
        System.Data.DataSet MESGetStationTypeParameter(int stationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MESGetStationTypeParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/MESGetStationTypeParameterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> MESGetStationTypeParameterAsync(int stationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSerialNumber2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSerialNumber2Response")]
        System.Data.DataSet GetSerialNumber2(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSerialNumber2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSerialNumber2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNumber2Async(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLanguage", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLanguageResponse")]
        System.Data.DataSet GetLanguage(string FormName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLanguage", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLanguageResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLanguageAsync(string FormName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetVer", ReplyAction="http://tempuri.org/IPartSelectSVC/GetVerResponse")]
        string GetVer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetVer", ReplyAction="http://tempuri.org/IPartSelectSVC/GetVerResponse")]
        System.Threading.Tasks.Task<string> GetVerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMSG", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMSGResponse")]
        string GetMSG(string S_Lang, string S_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMSG", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMSGResponse")]
        System.Threading.Tasks.Task<string> GetMSGAsync(string S_Lang, string S_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetVendor", ReplyAction="http://tempuri.org/IPartSelectSVC/GetVendorResponse")]
        System.Data.DataSet GetVendor(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetVendor", ReplyAction="http://tempuri.org/IPartSelectSVC/GetVendorResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetVendorAsync(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SetToolingLinkTooling", ReplyAction="http://tempuri.org/IPartSelectSVC/SetToolingLinkToolingResponse")]
        bool SetToolingLinkTooling(string FromTooling, string ToTooling, int FromUintID, App.Model.LoginList loginList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SetToolingLinkTooling", ReplyAction="http://tempuri.org/IPartSelectSVC/SetToolingLinkToolingResponse")]
        System.Threading.Tasks.Task<bool> SetToolingLinkToolingAsync(string FromTooling, string ToTooling, int FromUintID, App.Model.LoginList loginList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMaterail", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMaterailResponse")]
        App.MyMES.PartSelectService.Get_CreateMaterailResponse Get_CreateMaterail(App.MyMES.PartSelectService.Get_CreateMaterailRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMaterail", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMaterailResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMaterailResponse> Get_CreateMaterailAsync(App.MyMES.PartSelectService.Get_CreateMaterailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMesMaterialConsumeInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMesMaterialConsumeInfoResponse")]
        string ModMesMaterialConsumeInfo(App.Model.LoginList loginList, int ScanType, string SN, string MachineSN, int PartID, int ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMesMaterialConsumeInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMesMaterialConsumeInfoResponse")]
        System.Threading.Tasks.Task<string> ModMesMaterialConsumeInfoAsync(App.Model.LoginList loginList, int ScanType, string SN, string MachineSN, int PartID, int ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationConfig", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationConfigResponse")]
        System.Data.DataSet GetmesStationConfig(string Name, string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationConfig", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationConfigResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationConfigAsync(string Name, string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentInterID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentInterIDResponse")]
        System.Data.DataSet GetShipmentInterID(string ShipmentDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentInterID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentInterIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentInterIDAsync(string ShipmentDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SetMesPackageShipmennt", ReplyAction="http://tempuri.org/IPartSelectSVC/SetMesPackageShipmenntResponse")]
        void SetMesPackageShipmennt(string ShipmentDetailID, string SerialNumber, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SetMesPackageShipmennt", ReplyAction="http://tempuri.org/IPartSelectSVC/SetMesPackageShipmenntResponse")]
        System.Threading.Tasks.Task SetMesPackageShipmenntAsync(string ShipmentDetailID, string SerialNumber, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesLabelData", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesLabelDataResponse")]
        System.Data.DataSet GetMesLabelData(string LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesLabelData", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesLabelDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMesLabelDataAsync(string LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertMesPackageHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertMesPackageHistoryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(App.Model.mesUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(App.Model.LoginList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(App.Model.MesMaterialUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(App.Model.mesScreenshot))]
        int InsertMesPackageHistory(App.Model.mesPackageHistory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertMesPackageHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertMesPackageHistoryResponse")]
        System.Threading.Tasks.Task<int> InsertMesPackageHistoryAsync(App.Model.mesPackageHistory model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentNewResponse")]
        System.Data.DataSet GetShipmentNew(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentNewResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentNewAsync(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNewResponse")]
        System.Data.DataSet GetShipmentEntryNew(string S_FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNewResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentEntryNewAsync(string S_FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentReport", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentReportResponse")]
        System.Data.DataSet GetShipmentReport(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentReport", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentReportAsync(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentNewResponse")]
        string Edit_CO_WH_ShipmentNew(
                    string S_FInterID, 
                    string S_HAWB, 
                    string S_PalletCount, 
                    string S_GrossWeight, 
                    string S_Project, 
                    string S_ShipDate, 
                    string S_PalletSeq, 
                    string S_EmptyCarton, 
                    string S_PalletSN, 
                    string S_ShipNO, 
                    string S_ShipID, 
                    string S_Regin, 
                    string S_ReferenceNO, 
                    string S_Country, 
                    string S_Carrier, 
                    string S_HubCode, 
                    string S_TruckNo, 
                    string S_ReturnAddress, 
                    string S_DeliveryStreetAddress, 
                    string S_DeliveryRegion, 
                    string S_DeliveryToName, 
                    string S_DeliveryCityName, 
                    string S_DeliveryCountry, 
                    string S_AdditionalDeliveryToName, 
                    string S_DeliveryPostalCode, 
                    string S_TelNo, 
                    string S_OceanContainerNumber, 
                    string S_Origin, 
                    string S_TotalVolume, 
                    string S_POE_COC, 
                    string S_TransportMethod, 
                    string S_POE, 
                    string S_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentNewResponse")]
        System.Threading.Tasks.Task<string> Edit_CO_WH_ShipmentNewAsync(
                    string S_FInterID, 
                    string S_HAWB, 
                    string S_PalletCount, 
                    string S_GrossWeight, 
                    string S_Project, 
                    string S_ShipDate, 
                    string S_PalletSeq, 
                    string S_EmptyCarton, 
                    string S_PalletSN, 
                    string S_ShipNO, 
                    string S_ShipID, 
                    string S_Regin, 
                    string S_ReferenceNO, 
                    string S_Country, 
                    string S_Carrier, 
                    string S_HubCode, 
                    string S_TruckNo, 
                    string S_ReturnAddress, 
                    string S_DeliveryStreetAddress, 
                    string S_DeliveryRegion, 
                    string S_DeliveryToName, 
                    string S_DeliveryCityName, 
                    string S_DeliveryCountry, 
                    string S_AdditionalDeliveryToName, 
                    string S_DeliveryPostalCode, 
                    string S_TelNo, 
                    string S_OceanContainerNumber, 
                    string S_Origin, 
                    string S_TotalVolume, 
                    string S_POE_COC, 
                    string S_TransportMethod, 
                    string S_POE, 
                    string S_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/DeleteShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/DeleteShipmentNewResponse")]
        string DeleteShipmentNew(string FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/DeleteShipmentNew", ReplyAction="http://tempuri.org/IPartSelectSVC/DeleteShipmentNewResponse")]
        System.Threading.Tasks.Task<string> DeleteShipmentNewAsync(string FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/DeleteShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/DeleteShipmentEntryNewResponse")]
        string DeleteShipmentEntryNew(string FDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/DeleteShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/DeleteShipmentEntryNewResponse")]
        System.Threading.Tasks.Task<string> DeleteShipmentEntryNewAsync(string FDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateShipmentNew_FStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateShipmentNew_FStatusResponse")]
        string UpdateShipmentNew_FStatus(string FInterID_List, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateShipmentNew_FStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateShipmentNew_FStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateShipmentNew_FStatusAsync(string FInterID_List, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentNew_One", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentNew_OneResponse")]
        System.Data.DataSet GetShipmentNew_One(string FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentNew_One", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentNew_OneResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentNew_OneAsync(string FInterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew_One", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew_OneResponse")]
        System.Data.DataSet GetShipmentEntryNew_One(string FDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew_One", ReplyAction="http://tempuri.org/IPartSelectSVC/GetShipmentEntryNew_OneResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentEntryNew_OneAsync(string FDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentEntryNewResponse")]
        string Edit_CO_WH_ShipmentEntryNew(
                    string S_FDetailID, 
                    string S_FInterID, 
                    string S_FEntryID, 
                    string S_FCarrierNo, 
                    string S_FCommercialInvoice, 
                    string S_FCrossWeight, 
                    string S_FCTN, 
                    string S_FKPONO, 
                    string S_FLineItem, 
                    string S_FMPNNO, 
                    string S_FNetWeight, 
                    string S_FOutSN, 
                    string S_FPartNumberDesc, 
                    string S_FQTY, 
                    string S_FStatus, 
                    string S_FProjectNO, 
                    string S_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentEntryNew", ReplyAction="http://tempuri.org/IPartSelectSVC/Edit_CO_WH_ShipmentEntryNewResponse")]
        System.Threading.Tasks.Task<string> Edit_CO_WH_ShipmentEntryNewAsync(
                    string S_FDetailID, 
                    string S_FInterID, 
                    string S_FEntryID, 
                    string S_FCarrierNo, 
                    string S_FCommercialInvoice, 
                    string S_FCrossWeight, 
                    string S_FCTN, 
                    string S_FKPONO, 
                    string S_FLineItem, 
                    string S_FMPNNO, 
                    string S_FNetWeight, 
                    string S_FOutSN, 
                    string S_FPartNumberDesc, 
                    string S_FQTY, 
                    string S_FStatus, 
                    string S_FProjectNO, 
                    string S_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTluPartFamilyType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTluPartFamilyTypeResponse")]
        System.Data.DataSet GetORTluPartFamilyType(string DetailDefStr, string PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTluPartFamilyType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTluPartFamilyTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetORTluPartFamilyTypeAsync(string DetailDefStr, string PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTCode", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTCodeResponse")]
        string GetORTCode(string PartFamilyTypeID, string YearID, string WeekID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTCode", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTCodeResponse")]
        System.Threading.Tasks.Task<string> GetORTCodeAsync(string PartFamilyTypeID, string YearID, string WeekID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertORTCodeData", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertORTCodeDataResponse")]
        void InsertORTCodeData(string ORTCode, string PartFamilyTypeID, string YearID, string WeekID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertORTCodeData", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertORTCodeDataResponse")]
        System.Threading.Tasks.Task InsertORTCodeDataAsync(string ORTCode, string PartFamilyTypeID, string YearID, string WeekID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateORTCodeData", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateORTCodeDataResponse")]
        void UpdateORTCodeData(string NewORTCode, string OldORTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateORTCodeData", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateORTCodeDataResponse")]
        System.Threading.Tasks.Task UpdateORTCodeDataAsync(string NewORTCode, string OldORTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTMaxBatch", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTMaxBatchResponse")]
        System.Data.DataSet GetORTMaxBatch(string OldORTCode, string TestTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTMaxBatch", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTMaxBatchResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetORTMaxBatchAsync(string OldORTCode, string TestTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTForCode", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTForCodeResponse")]
        System.Data.DataSet GetORTForCode(string ORTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetORTForCode", ReplyAction="http://tempuri.org/IPartSelectSVC/GetORTForCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetORTForCodeAsync(string ORTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteCheck_Diagram", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteCheck_DiagramResponse")]
        App.MyMES.PartSelectService.GetRouteCheck_DiagramResponse GetRouteCheck_Diagram(App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteCheck_Diagram", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteCheck_DiagramResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetRouteCheck_DiagramResponse> GetRouteCheck_DiagramAsync(App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/AddmesReprintHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/AddmesReprintHistoryResponse")]
        string AddmesReprintHistory(string PrintType, string SN, string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/AddmesReprintHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/AddmesReprintHistoryResponse")]
        System.Threading.Tasks.Task<string> AddmesReprintHistoryAsync(string PrintType, string SN, string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_WHExcel", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_WHExcelResponse")]
        System.Data.DataSet Get_WHExcel(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_WHExcel", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_WHExcelResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_WHExcelAsync(string S_Start, string S_End, string FStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteData", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteDataResponse")]
        System.Data.DataSet GetRouteData(string LineID, string PartID, string PartFamilyID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteData", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRouteDataAsync(string LineID, string PartID, string PartFamilyID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_SN_Shell", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_SN_ShellResponse")]
        App.MyMES.PartSelectService.Get_SN_ShellResponse Get_SN_Shell(App.MyMES.PartSelectService.Get_SN_ShellRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_SN_Shell", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_SN_ShellResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_SN_ShellResponse> Get_SN_ShellAsync(App.MyMES.PartSelectService.Get_SN_ShellRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetIpad_BB", ReplyAction="http://tempuri.org/IPartSelectSVC/GetIpad_BBResponse")]
        System.Data.DataSet GetIpad_BB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetIpad_BB", ReplyAction="http://tempuri.org/IPartSelectSVC/GetIpad_BBResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIpad_BBAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetFirstStationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetFirstStationTypeResponse")]
        string GetFirstStationType(string S_MachineSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetFirstStationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetFirstStationTypeResponse")]
        System.Threading.Tasks.Task<string> GetFirstStationTypeAsync(string S_MachineSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSNToUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSNToUnitResponse")]
        System.Data.DataSet GetSNToUnit(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSNToUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSNToUnitResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSNToUnitAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspUpdateBox", ReplyAction="http://tempuri.org/IPartSelectSVC/uspUpdateBoxResponse")]
        string uspUpdateBox(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspUpdateBox", ReplyAction="http://tempuri.org/IPartSelectSVC/uspUpdateBoxResponse")]
        System.Threading.Tasks.Task<string> uspUpdateBoxAsync(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesPartAndPartFamilyDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesPartAndPartFamilyDetailResponse")]
        App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailResponse GetMesPartAndPartFamilyDetail(App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesPartAndPartFamilyDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesPartAndPartFamilyDetailResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailResponse> GetMesPartAndPartFamilyDetailAsync(App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetServerDateTime", ReplyAction="http://tempuri.org/IPartSelectSVC/GetServerDateTimeResponse")]
        string GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetServerDateTime", ReplyAction="http://tempuri.org/IPartSelectSVC/GetServerDateTimeResponse")]
        System.Threading.Tasks.Task<string> GetServerDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSampleCount", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSampleCountResponse")]
        string GetSampleCount(string startTime, string endTime, bool type, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSampleCount", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSampleCountResponse")]
        System.Threading.Tasks.Task<string> GetSampleCountAsync(string startTime, string endTime, bool type, int stationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductOrder", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductOrderResponse")]
        string GetProductOrder(string barcode, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductOrder", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductOrderResponse")]
        System.Threading.Tasks.Task<string> GetProductOrderAsync(string barcode, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductDataInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductDataInfoResponse")]
        System.Data.DataSet GetProductDataInfo(string barcode, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductDataInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductDataInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductDataInfoAsync(string barcode, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesStationAndStationTypeDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesStationAndStationTypeDetailResponse")]
        App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailResponse GetMesStationAndStationTypeDetail(App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesStationAndStationTypeDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesStationAndStationTypeDetailResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailResponse> GetMesStationAndStationTypeDetailAsync(App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetBarcodeType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetBarcodeTypeResponse")]
        int GetBarcodeType(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetBarcodeType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetBarcodeTypeResponse")]
        System.Threading.Tasks.Task<int> GetBarcodeTypeAsync(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetAndCheckUnitInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/GetAndCheckUnitInfoResponse")]
        System.Data.DataSet GetAndCheckUnitInfo(string barcode, string POID, string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetAndCheckUnitInfo", ReplyAction="http://tempuri.org/IPartSelectSVC/GetAndCheckUnitInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAndCheckUnitInfoAsync(string barcode, string POID, string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SnToPOID", ReplyAction="http://tempuri.org/IPartSelectSVC/SnToPOIDResponse")]
        string[] SnToPOID(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/SnToPOID", ReplyAction="http://tempuri.org/IPartSelectSVC/SnToPOIDResponse")]
        System.Threading.Tasks.Task<string[]> SnToPOIDAsync(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspUpdateBoxV2", ReplyAction="http://tempuri.org/IPartSelectSVC/uspUpdateBoxV2Response")]
        string uspUpdateBoxV2(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspUpdateBoxV2", ReplyAction="http://tempuri.org/IPartSelectSVC/uspUpdateBoxV2Response")]
        System.Threading.Tasks.Task<string> uspUpdateBoxV2Async(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackagingV2", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackagingV2Response")]
        App.MyMES.PartSelectService.uspPalletPackagingV2Response uspPalletPackagingV2(App.MyMES.PartSelectService.uspPalletPackagingV2Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackagingV2", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackagingV2Response")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.uspPalletPackagingV2Response> uspPalletPackagingV2Async(App.MyMES.PartSelectService.uspPalletPackagingV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitTTBox", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitTTBoxResponse")]
        System.Data.DataSet GetmesUnitTTBox(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitTTBox", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitTTBoxResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitTTBoxAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetAppSet", ReplyAction="http://tempuri.org/IPartSelectSVC/GetAppSetResponse")]
        string GetAppSet(string S_SetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetAppSet", ReplyAction="http://tempuri.org/IPartSelectSVC/GetAppSetResponse")]
        System.Threading.Tasks.Task<string> GetAppSetAsync(string S_SetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertmesScreenshotResponse")]
        int InsertmesScreenshot(App.Model.mesScreenshot model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/InsertmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/InsertmesScreenshotResponse")]
        System.Threading.Tasks.Task<int> InsertmesScreenshotAsync(App.Model.mesScreenshot model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesScreenshotResponse")]
        App.Model.mesScreenshot GetmesScreenshot(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesScreenshotResponse")]
        System.Threading.Tasks.Task<App.Model.mesScreenshot> GetmesScreenshotAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateScreenshotResponse")]
        bool UpdateScreenshot(App.Model.mesScreenshot model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/UpdateScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/UpdateScreenshotResponse")]
        System.Threading.Tasks.Task<bool> UpdateScreenshotAsync(App.Model.mesScreenshot model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ListmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/ListmesScreenshotResponse")]
        System.Data.DataSet ListmesScreenshot(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ListmesScreenshot", ReplyAction="http://tempuri.org/IPartSelectSVC/ListmesScreenshotResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListmesScreenshotAsync(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MyTest", ReplyAction="http://tempuri.org/IPartSelectSVC/MyTestResponse")]
        double MyTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/MyTest", ReplyAction="http://tempuri.org/IPartSelectSVC/MyTestResponse")]
        System.Threading.Tasks.Task<double> MyTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/P_DataSet", ReplyAction="http://tempuri.org/IPartSelectSVC/P_DataSetResponse")]
        System.Data.DataSet P_DataSet(string S_Sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/P_DataSet", ReplyAction="http://tempuri.org/IPartSelectSVC/P_DataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> P_DataSetAsync(string S_Sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ExecSql", ReplyAction="http://tempuri.org/IPartSelectSVC/ExecSqlResponse")]
        string ExecSql(string S_Sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ExecSql", ReplyAction="http://tempuri.org/IPartSelectSVC/ExecSqlResponse")]
        System.Threading.Tasks.Task<string> ExecSqlAsync(string S_Sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPartFamilyType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPartFamilyTypeResponse")]
        System.Data.DataSet GetluPartFamilyType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPartFamilyType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPartFamilyTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluPartFamilyTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetServerIP", ReplyAction="http://tempuri.org/IPartSelectSVC/GetServerIPResponse")]
        string GetServerIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetServerIP", ReplyAction="http://tempuri.org/IPartSelectSVC/GetServerIPResponse")]
        System.Threading.Tasks.Task<string> GetServerIPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetDBName", ReplyAction="http://tempuri.org/IPartSelectSVC/GetDBNameResponse")]
        string GetDBName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetDBName", ReplyAction="http://tempuri.org/IPartSelectSVC/GetDBNameResponse")]
        System.Threading.Tasks.Task<string> GetDBNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPartFamily", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPartFamilyResponse")]
        System.Data.DataSet GetluPartFamily(string PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPartFamily", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPartFamilyResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluPartFamilyAsync(string PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPart", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartResponse")]
        System.Data.DataSet GetmesPart(string PartFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPart", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartAsync(string PartFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPartDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartDetailResponse")]
        System.Data.DataSet GetmesPartDetail(int PartID, string PartDetailDefName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPartDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartDetailAsync(int PartID, string PartDetailDefName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPODetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPODetailDefResponse")]
        System.Data.DataSet GetluPODetailDef(int ProductionOrderID, string PODetailDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluPODetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluPODetailDefResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluPODetailDefAsync(int ProductionOrderID, string PODetailDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPartPrint", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartPrintResponse")]
        System.Data.DataSet GetmesPartPrint();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesPartPrint", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesPartPrintResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartPrintAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/mesGetSNFormatIDByList", ReplyAction="http://tempuri.org/IPartSelectSVC/mesGetSNFormatIDByListResponse")]
        string mesGetSNFormatIDByList(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/mesGetSNFormatIDByList", ReplyAction="http://tempuri.org/IPartSelectSVC/mesGetSNFormatIDByListResponse")]
        System.Threading.Tasks.Task<string> mesGetSNFormatIDByListAsync(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesLine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesLineResponse")]
        System.Data.DataSet GetmesLine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesLine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesLineResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesLineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/mesLineGroup", ReplyAction="http://tempuri.org/IPartSelectSVC/mesLineGroupResponse")]
        System.Data.DataSet mesLineGroup(string LineType, int PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/mesLineGroup", ReplyAction="http://tempuri.org/IPartSelectSVC/mesLineGroupResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> mesLineGroupAsync(string LineType, int PartFamilyTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetsysStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/GetsysStatusResponse")]
        System.Data.DataSet GetsysStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetsysStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/GetsysStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetsysStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationTypeResponse")]
        System.Data.DataSet GetmesStationType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesRoute", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesRouteResponse")]
        System.Data.DataSet GetmesRoute();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesRoute", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesRouteResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesRouteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteSequence", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteSequenceResponse")]
        System.Data.DataSet GetRouteSequence(string RouteID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteSequence", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteSequenceResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRouteSequenceAsync(string RouteID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStation", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationResponse")]
        System.Data.DataSet GetmesStation(string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStation", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationAsync(string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStation2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStation2Response")]
        System.Data.DataSet GetmesStation2(string StationTypeID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStation2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStation2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesStation2Async(string StationTypeID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationTypeByStationID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationTypeByStationIDResponse")]
        System.Data.DataSet GetmesStationTypeByStationID(string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesStationTypeByStationID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesStationTypeByStationIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationTypeByStationIDAsync(string StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluSerialNumberType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluSerialNumberTypeResponse")]
        System.Data.DataSet GetluSerialNumberType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluSerialNumberType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluSerialNumberTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluSerialNumberTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnitResponse")]
        System.Data.DataSet GetUnit(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnitResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUnitAsync(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnit2Response")]
        System.Data.DataSet GetUnit2(string PartID, string StationID, string POID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnit2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUnit2Async(string PartID, string StationID, string POID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMachineHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMachineHistoryResponse")]
        System.Data.DataSet GetMachineHistory(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMachineHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMachineHistoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMachineHistoryAsync(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit_Search", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnit_SearchResponse")]
        System.Data.DataSet GetUnit_Search(string S_DateStart, string S_DateEnd, string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnit_Search", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnit_SearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUnit_SearchAsync(string S_DateStart, string S_DateEnd, string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnitComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnitComponentResponse")]
        System.Data.DataSet GetUnitComponent(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetUnitComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetUnitComponentResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUnitComponentAsync(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitDetailResponse")]
        System.Data.DataSet GetmesUnitDetail(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitDetail", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitDetailAsync(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/GetHistoryResponse")]
        System.Data.DataSet GetHistory(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetHistory", ReplyAction="http://tempuri.org/IPartSelectSVC/GetHistoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHistoryAsync(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitState", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitStateResponse")]
        System.Data.DataSet GetmesUnitState(string S_PartID, string PartFamilyID, string S_RouteSequence, string LineID, int StationTypeID, string ProductionOrderID, string StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitState", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitStateResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitStateAsync(string S_PartID, string PartFamilyID, string S_RouteSequence, string LineID, int StationTypeID, string ProductionOrderID, string StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitState_Diagram", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitState_DiagramResponse")]
        System.Data.DataSet GetmesUnitState_Diagram(string S_PartID, string PartFamilyID, string LineID, int StationTypeID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitState_Diagram", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitState_DiagramResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitState_DiagramAsync(string S_PartID, string PartFamilyID, string LineID, int StationTypeID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberOfLine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberOfLineResponse")]
        System.Data.DataSet GetmesSerialNumberOfLine(string SNCategory, string PrintCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberOfLine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberOfLineResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberOfLineAsync(string SNCategory, string PrintCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberByUnitID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberByUnitIDResponse")]
        System.Data.DataSet GetmesSerialNumberByUnitID(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberByUnitID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberByUnitIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberByUnitIDAsync(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPO", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPOResponse")]
        System.Data.DataSet GetPO(string S_PartID, string S_StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPO", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPOResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPOAsync(string S_PartID, string S_StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPOAll", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPOAllResponse")]
        System.Data.DataSet GetPOAll(string S_PartID, string S_LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPOAll", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPOAllResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPOAllAsync(string S_PartID, string S_LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteIDResponse")]
        int GetRouteID(string LineID, string PartID, string PartFamilyID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteIDResponse")]
        System.Threading.Tasks.Task<int> GetRouteIDAsync(string LineID, string PartID, string PartFamilyID, string ProductionOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRoute", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteResponse")]
        System.Data.DataSet GetRoute(string S_RouteSequence, int I_RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRoute", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRouteAsync(string S_RouteSequence, int I_RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetApplicationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetApplicationTypeResponse")]
        System.Data.DataSet GetApplicationType(string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetApplicationType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetApplicationTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetApplicationTypeAsync(string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluDefect", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluDefectResponse")]
        System.Data.DataSet GetluDefect(int DefectTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluDefect", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluDefectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluDefectAsync(int DefectTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluUnitStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluUnitStatusResponse")]
        System.Data.DataSet GetluUnitStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluUnitStatus", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluUnitStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetluUnitStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitDefect", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitDefectResponse")]
        System.Data.DataSet GetmesUnitDefect(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitDefect", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitDefectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitDefectAsync(string S_UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspSNRGetNext", ReplyAction="http://tempuri.org/IPartSelectSVC/uspSNRGetNextResponse")]
        System.Data.DataSet uspSNRGetNext(string strSNFormat, int ReuseSNByStation, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strNextSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspSNRGetNext", ReplyAction="http://tempuri.org/IPartSelectSVC/uspSNRGetNextResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> uspSNRGetNextAsync(string strSNFormat, int ReuseSNByStation, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strNextSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPartDetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPartDetailDefResponse")]
        System.Data.DataSet GetPartDetailDef(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPartDetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPartDetailDefResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPartDetailDefAsync(string SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_MachineRouteMap", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_MachineRouteMapResponse")]
        string Get_MachineRouteMap(string S_ToolSN, string S_ProductPartID, string S_RouteID, string S_StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_MachineRouteMap", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_MachineRouteMapResponse")]
        System.Threading.Tasks.Task<string> Get_MachineRouteMapAsync(string S_ToolSN, string S_ProductPartID, string S_RouteID, string S_StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteCheckResponse")]
        string GetRouteCheck(int Scan_StationTypeID, int Scan_StationID, string LineID, System.Data.DataTable DT_Unit, string S_Str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetRouteCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/GetRouteCheckResponse")]
        System.Threading.Tasks.Task<string> GetRouteCheckAsync(int Scan_StationTypeID, int Scan_StationID, string LineID, System.Data.DataTable DT_Unit, string S_Str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_UnitID", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_UnitIDResponse")]
        System.Data.DataSet Get_UnitID(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_UnitID", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_UnitIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_UnitIDAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMesSNResponse")]
        App.MyMES.PartSelectService.Get_CreateMesSNResponse Get_CreateMesSN(App.MyMES.PartSelectService.Get_CreateMesSNRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMesSNResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMesSNResponse> Get_CreateMesSNAsync(App.MyMES.PartSelectService.Get_CreateMesSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN_New", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN_NewResponse")]
        App.MyMES.PartSelectService.Get_CreateMesSN_NewResponse Get_CreateMesSN_New(App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN_New", ReplyAction="http://tempuri.org/IPartSelectSVC/Get_CreateMesSN_NewResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMesSN_NewResponse> Get_CreateMesSN_NewAsync(App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/BoxSnToBatch", ReplyAction="http://tempuri.org/IPartSelectSVC/BoxSnToBatchResponse")]
        App.MyMES.PartSelectService.BoxSnToBatchResponse BoxSnToBatch(App.MyMES.PartSelectService.BoxSnToBatchRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/BoxSnToBatch", ReplyAction="http://tempuri.org/IPartSelectSVC/BoxSnToBatchResponse")]
        System.Threading.Tasks.Task<App.MyMES.PartSelectService.BoxSnToBatchResponse> BoxSnToBatchAsync(App.MyMES.PartSelectService.BoxSnToBatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetComponentCount", ReplyAction="http://tempuri.org/IPartSelectSVC/GetComponentCountResponse")]
        int GetComponentCount(string ParentPartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetComponentCount", ReplyAction="http://tempuri.org/IPartSelectSVC/GetComponentCountResponse")]
        System.Threading.Tasks.Task<int> GetComponentCountAsync(string ParentPartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitComponentResponse")]
        System.Data.DataSet GetmesUnitComponent(string UnitID, string ChildUnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitComponentResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitComponentAsync(string UnitID, string ChildUnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent2Response")]
        System.Data.DataSet GetmesUnitComponent2(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitComponent2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitComponent2Async(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructureResponse")]
        System.Data.DataSet GetmesProductStructure(string ParentPartID, string PartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructureResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructureAsync(string ParentPartID, string PartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure1", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructure1Response")]
        System.Data.DataSet GetmesProductStructure1(string ParentPartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure1", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructure1Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructure1Async(string ParentPartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructure2Response")]
        System.Data.DataSet GetmesProductStructure2(string ParentPartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesProductStructure2", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesProductStructure2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructure2Async(string ParentPartID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetChildScanLast", ReplyAction="http://tempuri.org/IPartSelectSVC/GetChildScanLastResponse")]
        System.Data.DataSet GetChildScanLast(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetChildScanLast", ReplyAction="http://tempuri.org/IPartSelectSVC/GetChildScanLastResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChildScanLastAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModPO", ReplyAction="http://tempuri.org/IPartSelectSVC/ModPOResponse")]
        void ModPO(string S_POID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModPO", ReplyAction="http://tempuri.org/IPartSelectSVC/ModPOResponse")]
        System.Threading.Tasks.Task ModPOAsync(string S_POID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMachine", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMachineResponse")]
        void ModMachine(string S_SN, string StatusID, bool IsUpUnitDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMachine", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMachineResponse")]
        System.Threading.Tasks.Task ModMachineAsync(string S_SN, string StatusID, bool IsUpUnitDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMachine2", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMachine2Response")]
        void ModMachine2(string ID, string StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/ModMachine2", ReplyAction="http://tempuri.org/IPartSelectSVC/ModMachine2Response")]
        System.Threading.Tasks.Task ModMachine2Async(string ID, string StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductionOrder", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductionOrderResponse")]
        System.Data.DataSet GetProductionOrder(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductionOrder", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductionOrderResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductionOrderAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesPackageStatusID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesPackageStatusIDResponse")]
        System.Data.DataSet GetMesPackageStatusID(string PalletSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetMesPackageStatusID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetMesPackageStatusIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMesPackageStatusIDAsync(string PalletSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumber", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberResponse")]
        System.Data.DataSet GetmesSerialNumber(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesSerialNumber", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesSerialNumberResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitResponse")]
        System.Data.DataSet GetmesUnit(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesUnit", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesUnitResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitAsync(string UnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetComponentResponse")]
        System.Data.DataSet GetComponent(int I_ChildUnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetComponent", ReplyAction="http://tempuri.org/IPartSelectSVC/GetComponentResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetComponentAsync(int I_ChildUnitID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesMachine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesMachineResponse")]
        System.Data.DataSet GetmesMachine(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesMachine", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesMachineResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesMachineAsync(string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesRouteMachineMap", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesRouteMachineMapResponse")]
        System.Data.DataSet GetmesRouteMachineMap(string MachineID, string MachineFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetmesRouteMachineMap", ReplyAction="http://tempuri.org/IPartSelectSVC/GetmesRouteMachineMapResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetmesRouteMachineMapAsync(string MachineID, string MachineFamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSNParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSNParameterResponse")]
        System.Data.DataSet GetSNParameter(int PartID, int TemplateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetSNParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/GetSNParameterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSNParameterAsync(int PartID, int TemplateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabels", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelsResponse")]
        System.Data.DataSet GetLabels(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabels", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLabelsAsync(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLBLGenLabel", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLBLGenLabelResponse")]
        System.Data.DataSet GetLBLGenLabel(string S_SN, string S_LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLBLGenLabel", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLBLGenLabelResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLBLGenLabelAsync(string S_SN, string S_LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelName", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelNameResponse")]
        System.Data.DataSet GetLabelName(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelName", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLabelNameAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelCMD", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelCMDResponse")]
        System.Data.DataSet GetLabelCMD(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelCMD", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelCMDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLabelCMDAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelIDResponse")]
        string GetLabelID(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetLabelID", ReplyAction="http://tempuri.org/IPartSelectSVC/GetLabelIDResponse")]
        System.Threading.Tasks.Task<string> GetLabelIDAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/LabelNameToLabelCMD", ReplyAction="http://tempuri.org/IPartSelectSVC/LabelNameToLabelCMDResponse")]
        System.Data.DataSet LabelNameToLabelCMD(string S_LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/LabelNameToLabelCMD", ReplyAction="http://tempuri.org/IPartSelectSVC/LabelNameToLabelCMDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabelNameToLabelCMDAsync(string S_LabelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/BuckToFGSN", ReplyAction="http://tempuri.org/IPartSelectSVC/BuckToFGSNResponse")]
        string BuckToFGSN(string S_BuckSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/BuckToFGSN", ReplyAction="http://tempuri.org/IPartSelectSVC/BuckToFGSNResponse")]
        System.Threading.Tasks.Task<string> BuckToFGSNAsync(string S_BuckSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPLCSeting", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPLCSetingResponse")]
        System.Data.DataSet GetPLCSeting(string S_SetName, string S_StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPLCSeting", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPLCSetingResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPLCSetingAsync(string S_SetName, string S_StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/TimeCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/TimeCheckResponse")]
        string TimeCheck(string StationID, string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/TimeCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/TimeCheckResponse")]
        System.Threading.Tasks.Task<string> TimeCheckAsync(string StationID, string S_SN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPartParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPartParameterResponse")]
        System.Data.DataSet GetPartParameter(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetPartParameter", ReplyAction="http://tempuri.org/IPartSelectSVC/GetPartParameterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPartParameterAsync(string PartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluDefectType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluDefectTypeResponse")]
        string GetluDefectType(string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetluDefectType", ReplyAction="http://tempuri.org/IPartSelectSVC/GetluDefectTypeResponse")]
        System.Threading.Tasks.Task<string> GetluDefectTypeAsync(string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxCheckResponse")]
        string uspKitBoxCheck(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxCheckResponse")]
        System.Threading.Tasks.Task<string> uspKitBoxCheckAsync(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxPackaging", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingResponse")]
        string uspKitBoxPackaging(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int BoxQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxPackaging", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingResponse")]
        System.Threading.Tasks.Task<string> uspKitBoxPackagingAsync(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int BoxQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingNew", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingNewResponse")]
        string uspKitBoxPackagingNew(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int Allnumber, int CurrentQty, int BoxQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingNew", ReplyAction="http://tempuri.org/IPartSelectSVC/uspKitBoxPackagingNewResponse")]
        System.Threading.Tasks.Task<string> uspKitBoxPackagingNewAsync(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int Allnumber, int CurrentQty, int BoxQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletCheckResponse")]
        string uspPalletCheck(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletCheck", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletCheckResponse")]
        System.Threading.Tasks.Task<string> uspPalletCheckAsync(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackaging", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackagingResponse")]
        string uspPalletPackaging(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackaging", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackagingResponse")]
        System.Threading.Tasks.Task<string> uspPalletPackagingAsync(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackaging_Siemens", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackaging_SiemensResponse")]
        string uspPalletPackaging_Siemens(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/uspPalletPackaging_Siemens", ReplyAction="http://tempuri.org/IPartSelectSVC/uspPalletPackaging_SiemensResponse")]
        System.Threading.Tasks.Task<string> uspPalletPackaging_SiemensAsync(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductionOrderDetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductionOrderDetailDefResponse")]
        System.Data.DataSet GetProductionOrderDetailDef(string ProductionOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartSelectSVC/GetProductionOrderDetailDef", ReplyAction="http://tempuri.org/IPartSelectSVC/GetProductionOrderDetailDefResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductionOrderDetailDefAsync(string ProductionOrderNumber);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreatePackageSN", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreatePackageSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string S_FormatName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public App.Model.mesUnit v_mesUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string strSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int type;
        
        public Get_CreatePackageSNRequest() {
        }
        
        public Get_CreatePackageSNRequest(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, string strSN, int type) {
            this.S_FormatName = S_FormatName;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.v_mesUnit = v_mesUnit;
            this.strSN = strSN;
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreatePackageSNResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreatePackageSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Get_CreatePackageSNResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strSN;
        
        public Get_CreatePackageSNResponse() {
        }
        
        public Get_CreatePackageSNResponse(string Get_CreatePackageSNResult, string strSN) {
            this.Get_CreatePackageSNResult = Get_CreatePackageSNResult;
            this.strSN = strSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreatePackageSN_Siemens", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreatePackageSN_SiemensRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string S_FormatName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string MultipackSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string strSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int type;
        
        public Get_CreatePackageSN_SiemensRequest() {
        }
        
        public Get_CreatePackageSN_SiemensRequest(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string MultipackSN, string strSN, int type) {
            this.S_FormatName = S_FormatName;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.MultipackSN = MultipackSN;
            this.strSN = strSN;
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreatePackageSN_SiemensResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreatePackageSN_SiemensResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Get_CreatePackageSN_SiemensResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strSN;
        
        public Get_CreatePackageSN_SiemensResponse() {
        }
        
        public Get_CreatePackageSN_SiemensResponse(string Get_CreatePackageSN_SiemensResult, string strSN) {
            this.Get_CreatePackageSN_SiemensResult = Get_CreatePackageSN_SiemensResult;
            this.strSN = strSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_SearchData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_SearchDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string S_FormatName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string strSNbuf;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string strOutput;
        
        public Get_SearchDataRequest() {
        }
        
        public Get_SearchDataRequest(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf, string strOutput) {
            this.S_FormatName = S_FormatName;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.strSNbuf = strSNbuf;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_SearchDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_SearchDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Get_SearchDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strOutput;
        
        public Get_SearchDataResponse() {
        }
        
        public Get_SearchDataResponse(System.Data.DataSet Get_SearchDataResult, string strOutput) {
            this.Get_SearchDataResult = Get_SearchDataResult;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uspCallProcedure", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uspCallProcedureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Pro_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string S_FormatName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string strSNbuf;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string strOutput;
        
        public uspCallProcedureRequest() {
        }
        
        public uspCallProcedureRequest(string Pro_Name, string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf, string strOutput) {
            this.Pro_Name = Pro_Name;
            this.S_FormatName = S_FormatName;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.strSNbuf = strSNbuf;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uspCallProcedureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uspCallProcedureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet uspCallProcedureResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strOutput;
        
        public uspCallProcedureResponse() {
        }
        
        public uspCallProcedureResponse(System.Data.DataSet uspCallProcedureResult, string strOutput) {
            this.uspCallProcedureResult = uspCallProcedureResult;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMaterail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMaterailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public App.Model.LoginList loginList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public App.Model.mesUnit v_mesUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public App.Model.MesMaterialUnit v_mesMaterialUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMaterailRequest() {
        }
        
        public Get_CreateMaterailRequest(string strSNFormat, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.LoginList loginList, App.Model.mesUnit v_mesUnit, App.Model.MesMaterialUnit v_mesMaterialUnit, int number, System.Data.DataSet dsSN) {
            this.strSNFormat = strSNFormat;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.loginList = loginList;
            this.v_mesUnit = v_mesUnit;
            this.v_mesMaterialUnit = v_mesMaterialUnit;
            this.number = number;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMaterailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMaterailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Get_CreateMaterailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMaterailResponse() {
        }
        
        public Get_CreateMaterailResponse(string Get_CreateMaterailResult, System.Data.DataSet dsSN) {
            this.Get_CreateMaterailResult = Get_CreateMaterailResult;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRouteCheck_Diagram", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteCheck_DiagramRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Scan_StationTypeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string LineID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Data.DataTable DT_Unit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string S_Str;
        
        public GetRouteCheck_DiagramRequest() {
        }
        
        public GetRouteCheck_DiagramRequest(int Scan_StationTypeID, string LineID, System.Data.DataTable DT_Unit, string S_Str) {
            this.Scan_StationTypeID = Scan_StationTypeID;
            this.LineID = LineID;
            this.DT_Unit = DT_Unit;
            this.S_Str = S_Str;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRouteCheck_DiagramResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteCheck_DiagramResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetRouteCheck_DiagramResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string S_OutputStateID;
        
        public GetRouteCheck_DiagramResponse() {
        }
        
        public GetRouteCheck_DiagramResponse(string GetRouteCheck_DiagramResult, string S_OutputStateID) {
            this.GetRouteCheck_DiagramResult = GetRouteCheck_DiagramResult;
            this.S_OutputStateID = S_OutputStateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_SN_Shell", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_SN_ShellRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FGSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strOutput;
        
        public Get_SN_ShellRequest() {
        }
        
        public Get_SN_ShellRequest(string FGSN, string strOutput) {
            this.FGSN = FGSN;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_SN_ShellResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_SN_ShellResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Get_SN_ShellResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strOutput;
        
        public Get_SN_ShellResponse() {
        }
        
        public Get_SN_ShellResponse(System.Data.DataSet Get_SN_ShellResult, string strOutput) {
            this.Get_SN_ShellResult = Get_SN_ShellResult;
            this.strOutput = strOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesPartAndPartFamilyDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesPartAndPartFamilyDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int PartId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PartDetailDefName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PartFamilyDetailDefName;
        
        public GetMesPartAndPartFamilyDetailRequest() {
        }
        
        public GetMesPartAndPartFamilyDetailRequest(int PartId, string PartDetailDefName, string PartFamilyDetailDefName) {
            this.PartId = PartId;
            this.PartDetailDefName = PartDetailDefName;
            this.PartFamilyDetailDefName = PartFamilyDetailDefName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesPartAndPartFamilyDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesPartAndPartFamilyDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet GetMesPartAndPartFamilyDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string result;
        
        public GetMesPartAndPartFamilyDetailResponse() {
        }
        
        public GetMesPartAndPartFamilyDetailResponse(System.Data.DataSet GetMesPartAndPartFamilyDetailResult, string result) {
            this.GetMesPartAndPartFamilyDetailResult = GetMesPartAndPartFamilyDetailResult;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesStationAndStationTypeDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesStationAndStationTypeDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int StationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string StationDetailDefName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string StationTypeDetailDefName;
        
        public GetMesStationAndStationTypeDetailRequest() {
        }
        
        public GetMesStationAndStationTypeDetailRequest(int StationId, string StationDetailDefName, string StationTypeDetailDefName) {
            this.StationId = StationId;
            this.StationDetailDefName = StationDetailDefName;
            this.StationTypeDetailDefName = StationTypeDetailDefName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesStationAndStationTypeDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesStationAndStationTypeDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetMesStationAndStationTypeDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string result;
        
        public GetMesStationAndStationTypeDetailResponse() {
        }
        
        public GetMesStationAndStationTypeDetailResponse(string GetMesStationAndStationTypeDetailResult, string result) {
            this.GetMesStationAndStationTypeDetailResult = GetMesStationAndStationTypeDetailResult;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uspPalletPackagingV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uspPalletPackagingV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PartID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ProductionOrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string S_CartonSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string S_PalletSN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public App.Model.LoginList loginList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int PalletQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int boxCount;
        
        public uspPalletPackagingV2Request() {
        }
        
        public uspPalletPackagingV2Request(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty, int boxCount) {
            this.PartID = PartID;
            this.ProductionOrderID = ProductionOrderID;
            this.S_CartonSN = S_CartonSN;
            this.S_PalletSN = S_PalletSN;
            this.loginList = loginList;
            this.PalletQty = PalletQty;
            this.boxCount = boxCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uspPalletPackagingV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uspPalletPackagingV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string uspPalletPackagingV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int boxCount;
        
        public uspPalletPackagingV2Response() {
        }
        
        public uspPalletPackagingV2Response(string uspPalletPackagingV2Result, int boxCount) {
            this.uspPalletPackagingV2Result = uspPalletPackagingV2Result;
            this.boxCount = boxCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMesSN", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMesSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public App.Model.LoginList loginList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public App.Model.mesUnit v_mesUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMesSNRequest() {
        }
        
        public Get_CreateMesSNRequest(string strSNFormat, App.Model.LoginList loginList, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, int number, System.Data.DataSet dsSN) {
            this.strSNFormat = strSNFormat;
            this.loginList = loginList;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.v_mesUnit = v_mesUnit;
            this.number = number;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMesSNResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMesSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Get_CreateMesSNResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMesSNResponse() {
        }
        
        public Get_CreateMesSNResponse(string Get_CreateMesSNResult, System.Data.DataSet dsSN) {
            this.Get_CreateMesSNResult = Get_CreateMesSNResult;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMesSN_New", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMesSN_NewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public App.Model.LoginList loginList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string xmlProdOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string xmlPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string xmlStation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string xmlExtraData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public App.Model.mesUnit v_mesUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMesSN_NewRequest() {
        }
        
        public Get_CreateMesSN_NewRequest(string strSNFormat, App.Model.LoginList loginList, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, int number, System.Data.DataSet dsSN) {
            this.strSNFormat = strSNFormat;
            this.loginList = loginList;
            this.xmlProdOrder = xmlProdOrder;
            this.xmlPart = xmlPart;
            this.xmlStation = xmlStation;
            this.xmlExtraData = xmlExtraData;
            this.v_mesUnit = v_mesUnit;
            this.number = number;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_CreateMesSN_NewResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_CreateMesSN_NewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Get_CreateMesSN_NewResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Data.DataSet dsSN;
        
        public Get_CreateMesSN_NewResponse() {
        }
        
        public Get_CreateMesSN_NewResponse(string Get_CreateMesSN_NewResult, System.Data.DataSet dsSN) {
            this.Get_CreateMesSN_NewResult = Get_CreateMesSN_NewResult;
            this.dsSN = dsSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BoxSnToBatch", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BoxSnToBatchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string S_BoxSN;
        
        public BoxSnToBatchRequest() {
        }
        
        public BoxSnToBatchRequest(string S_BoxSN) {
            this.S_BoxSN = S_BoxSN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BoxSnToBatchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BoxSnToBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet BoxSnToBatchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string S_Result;
        
        public BoxSnToBatchResponse() {
        }
        
        public BoxSnToBatchResponse(System.Data.DataSet BoxSnToBatchResult, string S_Result) {
            this.BoxSnToBatchResult = BoxSnToBatchResult;
            this.S_Result = S_Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPartSelectSVCChannel : App.MyMES.PartSelectService.IPartSelectSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartSelectSVCClient : System.ServiceModel.ClientBase<App.MyMES.PartSelectService.IPartSelectSVC>, App.MyMES.PartSelectService.IPartSelectSVC {
        
        public PartSelectSVCClient() {
        }
        
        public PartSelectSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PartSelectSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartSelectSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartSelectSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_CreatePackageSNResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_CreatePackageSN(App.MyMES.PartSelectService.Get_CreatePackageSNRequest request) {
            return base.Channel.Get_CreatePackageSN(request);
        }
        
        public string Get_CreatePackageSN(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, ref string strSN, int type) {
            App.MyMES.PartSelectService.Get_CreatePackageSNRequest inValue = new App.MyMES.PartSelectService.Get_CreatePackageSNRequest();
            inValue.S_FormatName = S_FormatName;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.v_mesUnit = v_mesUnit;
            inValue.strSN = strSN;
            inValue.type = type;
            App.MyMES.PartSelectService.Get_CreatePackageSNResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_CreatePackageSN(inValue);
            strSN = retVal.strSN;
            return retVal.Get_CreatePackageSNResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreatePackageSNResponse> Get_CreatePackageSNAsync(App.MyMES.PartSelectService.Get_CreatePackageSNRequest request) {
            return base.Channel.Get_CreatePackageSNAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_CreatePackageSN_Siemens(App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest request) {
            return base.Channel.Get_CreatePackageSN_Siemens(request);
        }
        
        public string Get_CreatePackageSN_Siemens(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string MultipackSN, ref string strSN, int type) {
            App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest inValue = new App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest();
            inValue.S_FormatName = S_FormatName;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.MultipackSN = MultipackSN;
            inValue.strSN = strSN;
            inValue.type = type;
            App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_CreatePackageSN_Siemens(inValue);
            strSN = retVal.strSN;
            return retVal.Get_CreatePackageSN_SiemensResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensResponse> Get_CreatePackageSN_SiemensAsync(App.MyMES.PartSelectService.Get_CreatePackageSN_SiemensRequest request) {
            return base.Channel.Get_CreatePackageSN_SiemensAsync(request);
        }
        
        public System.Data.DataSet Get_PackageData(string S_SN) {
            return base.Channel.Get_PackageData(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_PackageDataAsync(string S_SN) {
            return base.Channel.Get_PackageDataAsync(S_SN);
        }
        
        public System.Data.DataSet Get_PalletData(string S_SN) {
            return base.Channel.Get_PalletData(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_PalletDataAsync(string S_SN) {
            return base.Channel.Get_PalletDataAsync(S_SN);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_SearchDataResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_SearchData(App.MyMES.PartSelectService.Get_SearchDataRequest request) {
            return base.Channel.Get_SearchData(request);
        }
        
        public System.Data.DataSet Get_SearchData(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf, ref string strOutput) {
            App.MyMES.PartSelectService.Get_SearchDataRequest inValue = new App.MyMES.PartSelectService.Get_SearchDataRequest();
            inValue.S_FormatName = S_FormatName;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.strSNbuf = strSNbuf;
            inValue.strOutput = strOutput;
            App.MyMES.PartSelectService.Get_SearchDataResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_SearchData(inValue);
            strOutput = retVal.strOutput;
            return retVal.Get_SearchDataResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_SearchDataResponse> Get_SearchDataAsync(App.MyMES.PartSelectService.Get_SearchDataRequest request) {
            return base.Channel.Get_SearchDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.uspCallProcedureResponse App.MyMES.PartSelectService.IPartSelectSVC.uspCallProcedure(App.MyMES.PartSelectService.uspCallProcedureRequest request) {
            return base.Channel.uspCallProcedure(request);
        }
        
        public System.Data.DataSet uspCallProcedure(string Pro_Name, string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf, ref string strOutput) {
            App.MyMES.PartSelectService.uspCallProcedureRequest inValue = new App.MyMES.PartSelectService.uspCallProcedureRequest();
            inValue.Pro_Name = Pro_Name;
            inValue.S_FormatName = S_FormatName;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.strSNbuf = strSNbuf;
            inValue.strOutput = strOutput;
            App.MyMES.PartSelectService.uspCallProcedureResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).uspCallProcedure(inValue);
            strOutput = retVal.strOutput;
            return retVal.uspCallProcedureResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.uspCallProcedureResponse> uspCallProcedureAsync(App.MyMES.PartSelectService.uspCallProcedureRequest request) {
            return base.Channel.uspCallProcedureAsync(request);
        }
        
        public System.Data.DataSet Get_PartParameter(string PartID) {
            return base.Channel.Get_PartParameter(PartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_PartParameterAsync(string PartID) {
            return base.Channel.Get_PartParameterAsync(PartID);
        }
        
        public System.Data.DataSet MESGetBomPartInfo(int ParentPartID, int StationTypeID) {
            return base.Channel.MESGetBomPartInfo(ParentPartID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MESGetBomPartInfoAsync(int ParentPartID, int StationTypeID) {
            return base.Channel.MESGetBomPartInfoAsync(ParentPartID, StationTypeID);
        }
        
        public string MESAssembleCheckMianSN(string ProductionOrderID, int LineID, int StationID, int StationTypeID, string SN, bool COF) {
            return base.Channel.MESAssembleCheckMianSN(ProductionOrderID, LineID, StationID, StationTypeID, SN, COF);
        }
        
        public System.Threading.Tasks.Task<string> MESAssembleCheckMianSNAsync(string ProductionOrderID, int LineID, int StationID, int StationTypeID, string SN, bool COF) {
            return base.Channel.MESAssembleCheckMianSNAsync(ProductionOrderID, LineID, StationID, StationTypeID, SN, COF);
        }
        
        public string MESAssembleCheckOtherSN(string SN, string PartID, bool COF) {
            return base.Channel.MESAssembleCheckOtherSN(SN, PartID, COF);
        }
        
        public System.Threading.Tasks.Task<string> MESAssembleCheckOtherSNAsync(string SN, string PartID, bool COF) {
            return base.Channel.MESAssembleCheckOtherSNAsync(SN, PartID, COF);
        }
        
        public string MESAssembleCheckVirtualSN(string SN, string PartID, string Status) {
            return base.Channel.MESAssembleCheckVirtualSN(SN, PartID, Status);
        }
        
        public System.Threading.Tasks.Task<string> MESAssembleCheckVirtualSNAsync(string SN, string PartID, string Status) {
            return base.Channel.MESAssembleCheckVirtualSNAsync(SN, PartID, Status);
        }
        
        public void MESModifyUnitDetail(int UnitID, string FileName, string Value) {
            base.Channel.MESModifyUnitDetail(UnitID, FileName, Value);
        }
        
        public System.Threading.Tasks.Task MESModifyUnitDetailAsync(int UnitID, string FileName, string Value) {
            return base.Channel.MESModifyUnitDetailAsync(UnitID, FileName, Value);
        }
        
        public string MESGetUnitUnitStateID(string SN) {
            return base.Channel.MESGetUnitUnitStateID(SN);
        }
        
        public System.Threading.Tasks.Task<string> MESGetUnitUnitStateIDAsync(string SN) {
            return base.Channel.MESGetUnitUnitStateIDAsync(SN);
        }
        
        public System.Data.DataSet MESGetStationTypeParameter(int stationTypeID) {
            return base.Channel.MESGetStationTypeParameter(stationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MESGetStationTypeParameterAsync(int stationTypeID) {
            return base.Channel.MESGetStationTypeParameterAsync(stationTypeID);
        }
        
        public System.Data.DataSet GetSerialNumber2(string S_SN) {
            return base.Channel.GetSerialNumber2(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSerialNumber2Async(string S_SN) {
            return base.Channel.GetSerialNumber2Async(S_SN);
        }
        
        public System.Data.DataSet GetLanguage(string FormName, string Type) {
            return base.Channel.GetLanguage(FormName, Type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLanguageAsync(string FormName, string Type) {
            return base.Channel.GetLanguageAsync(FormName, Type);
        }
        
        public string GetVer() {
            return base.Channel.GetVer();
        }
        
        public System.Threading.Tasks.Task<string> GetVerAsync() {
            return base.Channel.GetVerAsync();
        }
        
        public string GetMSG(string S_Lang, string S_Code) {
            return base.Channel.GetMSG(S_Lang, S_Code);
        }
        
        public System.Threading.Tasks.Task<string> GetMSGAsync(string S_Lang, string S_Code) {
            return base.Channel.GetMSGAsync(S_Lang, S_Code);
        }
        
        public System.Data.DataSet GetVendor(string PartID) {
            return base.Channel.GetVendor(PartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetVendorAsync(string PartID) {
            return base.Channel.GetVendorAsync(PartID);
        }
        
        public bool SetToolingLinkTooling(string FromTooling, string ToTooling, int FromUintID, App.Model.LoginList loginList) {
            return base.Channel.SetToolingLinkTooling(FromTooling, ToTooling, FromUintID, loginList);
        }
        
        public System.Threading.Tasks.Task<bool> SetToolingLinkToolingAsync(string FromTooling, string ToTooling, int FromUintID, App.Model.LoginList loginList) {
            return base.Channel.SetToolingLinkToolingAsync(FromTooling, ToTooling, FromUintID, loginList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_CreateMaterailResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_CreateMaterail(App.MyMES.PartSelectService.Get_CreateMaterailRequest request) {
            return base.Channel.Get_CreateMaterail(request);
        }
        
        public string Get_CreateMaterail(string strSNFormat, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.LoginList loginList, App.Model.mesUnit v_mesUnit, App.Model.MesMaterialUnit v_mesMaterialUnit, int number, ref System.Data.DataSet dsSN) {
            App.MyMES.PartSelectService.Get_CreateMaterailRequest inValue = new App.MyMES.PartSelectService.Get_CreateMaterailRequest();
            inValue.strSNFormat = strSNFormat;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.loginList = loginList;
            inValue.v_mesUnit = v_mesUnit;
            inValue.v_mesMaterialUnit = v_mesMaterialUnit;
            inValue.number = number;
            inValue.dsSN = dsSN;
            App.MyMES.PartSelectService.Get_CreateMaterailResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_CreateMaterail(inValue);
            dsSN = retVal.dsSN;
            return retVal.Get_CreateMaterailResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMaterailResponse> Get_CreateMaterailAsync(App.MyMES.PartSelectService.Get_CreateMaterailRequest request) {
            return base.Channel.Get_CreateMaterailAsync(request);
        }
        
        public string ModMesMaterialConsumeInfo(App.Model.LoginList loginList, int ScanType, string SN, string MachineSN, int PartID, int ProductionOrderID) {
            return base.Channel.ModMesMaterialConsumeInfo(loginList, ScanType, SN, MachineSN, PartID, ProductionOrderID);
        }
        
        public System.Threading.Tasks.Task<string> ModMesMaterialConsumeInfoAsync(App.Model.LoginList loginList, int ScanType, string SN, string MachineSN, int PartID, int ProductionOrderID) {
            return base.Channel.ModMesMaterialConsumeInfoAsync(loginList, ScanType, SN, MachineSN, PartID, ProductionOrderID);
        }
        
        public System.Data.DataSet GetmesStationConfig(string Name, string StationID) {
            return base.Channel.GetmesStationConfig(Name, StationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationConfigAsync(string Name, string StationID) {
            return base.Channel.GetmesStationConfigAsync(Name, StationID);
        }
        
        public System.Data.DataSet GetShipmentInterID(string ShipmentDetailID) {
            return base.Channel.GetShipmentInterID(ShipmentDetailID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentInterIDAsync(string ShipmentDetailID) {
            return base.Channel.GetShipmentInterIDAsync(ShipmentDetailID);
        }
        
        public void SetMesPackageShipmennt(string ShipmentDetailID, string SerialNumber, int Type) {
            base.Channel.SetMesPackageShipmennt(ShipmentDetailID, SerialNumber, Type);
        }
        
        public System.Threading.Tasks.Task SetMesPackageShipmenntAsync(string ShipmentDetailID, string SerialNumber, int Type) {
            return base.Channel.SetMesPackageShipmenntAsync(ShipmentDetailID, SerialNumber, Type);
        }
        
        public System.Data.DataSet GetMesLabelData(string LabelName) {
            return base.Channel.GetMesLabelData(LabelName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMesLabelDataAsync(string LabelName) {
            return base.Channel.GetMesLabelDataAsync(LabelName);
        }
        
        public int InsertMesPackageHistory(App.Model.mesPackageHistory model) {
            return base.Channel.InsertMesPackageHistory(model);
        }
        
        public System.Threading.Tasks.Task<int> InsertMesPackageHistoryAsync(App.Model.mesPackageHistory model) {
            return base.Channel.InsertMesPackageHistoryAsync(model);
        }
        
        public System.Data.DataSet GetShipmentNew(string S_Start, string S_End, string FStatus) {
            return base.Channel.GetShipmentNew(S_Start, S_End, FStatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentNewAsync(string S_Start, string S_End, string FStatus) {
            return base.Channel.GetShipmentNewAsync(S_Start, S_End, FStatus);
        }
        
        public System.Data.DataSet GetShipmentEntryNew(string S_FInterID) {
            return base.Channel.GetShipmentEntryNew(S_FInterID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentEntryNewAsync(string S_FInterID) {
            return base.Channel.GetShipmentEntryNewAsync(S_FInterID);
        }
        
        public System.Data.DataSet GetShipmentReport(string S_Start, string S_End, string FStatus) {
            return base.Channel.GetShipmentReport(S_Start, S_End, FStatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentReportAsync(string S_Start, string S_End, string FStatus) {
            return base.Channel.GetShipmentReportAsync(S_Start, S_End, FStatus);
        }
        
        public string Edit_CO_WH_ShipmentNew(
                    string S_FInterID, 
                    string S_HAWB, 
                    string S_PalletCount, 
                    string S_GrossWeight, 
                    string S_Project, 
                    string S_ShipDate, 
                    string S_PalletSeq, 
                    string S_EmptyCarton, 
                    string S_PalletSN, 
                    string S_ShipNO, 
                    string S_ShipID, 
                    string S_Regin, 
                    string S_ReferenceNO, 
                    string S_Country, 
                    string S_Carrier, 
                    string S_HubCode, 
                    string S_TruckNo, 
                    string S_ReturnAddress, 
                    string S_DeliveryStreetAddress, 
                    string S_DeliveryRegion, 
                    string S_DeliveryToName, 
                    string S_DeliveryCityName, 
                    string S_DeliveryCountry, 
                    string S_AdditionalDeliveryToName, 
                    string S_DeliveryPostalCode, 
                    string S_TelNo, 
                    string S_OceanContainerNumber, 
                    string S_Origin, 
                    string S_TotalVolume, 
                    string S_POE_COC, 
                    string S_TransportMethod, 
                    string S_POE, 
                    string S_Type) {
            return base.Channel.Edit_CO_WH_ShipmentNew(S_FInterID, S_HAWB, S_PalletCount, S_GrossWeight, S_Project, S_ShipDate, S_PalletSeq, S_EmptyCarton, S_PalletSN, S_ShipNO, S_ShipID, S_Regin, S_ReferenceNO, S_Country, S_Carrier, S_HubCode, S_TruckNo, S_ReturnAddress, S_DeliveryStreetAddress, S_DeliveryRegion, S_DeliveryToName, S_DeliveryCityName, S_DeliveryCountry, S_AdditionalDeliveryToName, S_DeliveryPostalCode, S_TelNo, S_OceanContainerNumber, S_Origin, S_TotalVolume, S_POE_COC, S_TransportMethod, S_POE, S_Type);
        }
        
        public System.Threading.Tasks.Task<string> Edit_CO_WH_ShipmentNewAsync(
                    string S_FInterID, 
                    string S_HAWB, 
                    string S_PalletCount, 
                    string S_GrossWeight, 
                    string S_Project, 
                    string S_ShipDate, 
                    string S_PalletSeq, 
                    string S_EmptyCarton, 
                    string S_PalletSN, 
                    string S_ShipNO, 
                    string S_ShipID, 
                    string S_Regin, 
                    string S_ReferenceNO, 
                    string S_Country, 
                    string S_Carrier, 
                    string S_HubCode, 
                    string S_TruckNo, 
                    string S_ReturnAddress, 
                    string S_DeliveryStreetAddress, 
                    string S_DeliveryRegion, 
                    string S_DeliveryToName, 
                    string S_DeliveryCityName, 
                    string S_DeliveryCountry, 
                    string S_AdditionalDeliveryToName, 
                    string S_DeliveryPostalCode, 
                    string S_TelNo, 
                    string S_OceanContainerNumber, 
                    string S_Origin, 
                    string S_TotalVolume, 
                    string S_POE_COC, 
                    string S_TransportMethod, 
                    string S_POE, 
                    string S_Type) {
            return base.Channel.Edit_CO_WH_ShipmentNewAsync(S_FInterID, S_HAWB, S_PalletCount, S_GrossWeight, S_Project, S_ShipDate, S_PalletSeq, S_EmptyCarton, S_PalletSN, S_ShipNO, S_ShipID, S_Regin, S_ReferenceNO, S_Country, S_Carrier, S_HubCode, S_TruckNo, S_ReturnAddress, S_DeliveryStreetAddress, S_DeliveryRegion, S_DeliveryToName, S_DeliveryCityName, S_DeliveryCountry, S_AdditionalDeliveryToName, S_DeliveryPostalCode, S_TelNo, S_OceanContainerNumber, S_Origin, S_TotalVolume, S_POE_COC, S_TransportMethod, S_POE, S_Type);
        }
        
        public string DeleteShipmentNew(string FInterID) {
            return base.Channel.DeleteShipmentNew(FInterID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteShipmentNewAsync(string FInterID) {
            return base.Channel.DeleteShipmentNewAsync(FInterID);
        }
        
        public string DeleteShipmentEntryNew(string FDetailID) {
            return base.Channel.DeleteShipmentEntryNew(FDetailID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteShipmentEntryNewAsync(string FDetailID) {
            return base.Channel.DeleteShipmentEntryNewAsync(FDetailID);
        }
        
        public string UpdateShipmentNew_FStatus(string FInterID_List, string Status) {
            return base.Channel.UpdateShipmentNew_FStatus(FInterID_List, Status);
        }
        
        public System.Threading.Tasks.Task<string> UpdateShipmentNew_FStatusAsync(string FInterID_List, string Status) {
            return base.Channel.UpdateShipmentNew_FStatusAsync(FInterID_List, Status);
        }
        
        public System.Data.DataSet GetShipmentNew_One(string FInterID) {
            return base.Channel.GetShipmentNew_One(FInterID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentNew_OneAsync(string FInterID) {
            return base.Channel.GetShipmentNew_OneAsync(FInterID);
        }
        
        public System.Data.DataSet GetShipmentEntryNew_One(string FDetailID) {
            return base.Channel.GetShipmentEntryNew_One(FDetailID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShipmentEntryNew_OneAsync(string FDetailID) {
            return base.Channel.GetShipmentEntryNew_OneAsync(FDetailID);
        }
        
        public string Edit_CO_WH_ShipmentEntryNew(
                    string S_FDetailID, 
                    string S_FInterID, 
                    string S_FEntryID, 
                    string S_FCarrierNo, 
                    string S_FCommercialInvoice, 
                    string S_FCrossWeight, 
                    string S_FCTN, 
                    string S_FKPONO, 
                    string S_FLineItem, 
                    string S_FMPNNO, 
                    string S_FNetWeight, 
                    string S_FOutSN, 
                    string S_FPartNumberDesc, 
                    string S_FQTY, 
                    string S_FStatus, 
                    string S_FProjectNO, 
                    string S_Type) {
            return base.Channel.Edit_CO_WH_ShipmentEntryNew(S_FDetailID, S_FInterID, S_FEntryID, S_FCarrierNo, S_FCommercialInvoice, S_FCrossWeight, S_FCTN, S_FKPONO, S_FLineItem, S_FMPNNO, S_FNetWeight, S_FOutSN, S_FPartNumberDesc, S_FQTY, S_FStatus, S_FProjectNO, S_Type);
        }
        
        public System.Threading.Tasks.Task<string> Edit_CO_WH_ShipmentEntryNewAsync(
                    string S_FDetailID, 
                    string S_FInterID, 
                    string S_FEntryID, 
                    string S_FCarrierNo, 
                    string S_FCommercialInvoice, 
                    string S_FCrossWeight, 
                    string S_FCTN, 
                    string S_FKPONO, 
                    string S_FLineItem, 
                    string S_FMPNNO, 
                    string S_FNetWeight, 
                    string S_FOutSN, 
                    string S_FPartNumberDesc, 
                    string S_FQTY, 
                    string S_FStatus, 
                    string S_FProjectNO, 
                    string S_Type) {
            return base.Channel.Edit_CO_WH_ShipmentEntryNewAsync(S_FDetailID, S_FInterID, S_FEntryID, S_FCarrierNo, S_FCommercialInvoice, S_FCrossWeight, S_FCTN, S_FKPONO, S_FLineItem, S_FMPNNO, S_FNetWeight, S_FOutSN, S_FPartNumberDesc, S_FQTY, S_FStatus, S_FProjectNO, S_Type);
        }
        
        public System.Data.DataSet GetORTluPartFamilyType(string DetailDefStr, string PartFamilyTypeID) {
            return base.Channel.GetORTluPartFamilyType(DetailDefStr, PartFamilyTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetORTluPartFamilyTypeAsync(string DetailDefStr, string PartFamilyTypeID) {
            return base.Channel.GetORTluPartFamilyTypeAsync(DetailDefStr, PartFamilyTypeID);
        }
        
        public string GetORTCode(string PartFamilyTypeID, string YearID, string WeekID) {
            return base.Channel.GetORTCode(PartFamilyTypeID, YearID, WeekID);
        }
        
        public System.Threading.Tasks.Task<string> GetORTCodeAsync(string PartFamilyTypeID, string YearID, string WeekID) {
            return base.Channel.GetORTCodeAsync(PartFamilyTypeID, YearID, WeekID);
        }
        
        public void InsertORTCodeData(string ORTCode, string PartFamilyTypeID, string YearID, string WeekID) {
            base.Channel.InsertORTCodeData(ORTCode, PartFamilyTypeID, YearID, WeekID);
        }
        
        public System.Threading.Tasks.Task InsertORTCodeDataAsync(string ORTCode, string PartFamilyTypeID, string YearID, string WeekID) {
            return base.Channel.InsertORTCodeDataAsync(ORTCode, PartFamilyTypeID, YearID, WeekID);
        }
        
        public void UpdateORTCodeData(string NewORTCode, string OldORTCode) {
            base.Channel.UpdateORTCodeData(NewORTCode, OldORTCode);
        }
        
        public System.Threading.Tasks.Task UpdateORTCodeDataAsync(string NewORTCode, string OldORTCode) {
            return base.Channel.UpdateORTCodeDataAsync(NewORTCode, OldORTCode);
        }
        
        public System.Data.DataSet GetORTMaxBatch(string OldORTCode, string TestTypeID) {
            return base.Channel.GetORTMaxBatch(OldORTCode, TestTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetORTMaxBatchAsync(string OldORTCode, string TestTypeID) {
            return base.Channel.GetORTMaxBatchAsync(OldORTCode, TestTypeID);
        }
        
        public System.Data.DataSet GetORTForCode(string ORTCode) {
            return base.Channel.GetORTForCode(ORTCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetORTForCodeAsync(string ORTCode) {
            return base.Channel.GetORTForCodeAsync(ORTCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.GetRouteCheck_DiagramResponse App.MyMES.PartSelectService.IPartSelectSVC.GetRouteCheck_Diagram(App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest request) {
            return base.Channel.GetRouteCheck_Diagram(request);
        }
        
        public string GetRouteCheck_Diagram(int Scan_StationTypeID, string LineID, System.Data.DataTable DT_Unit, string S_Str, out string S_OutputStateID) {
            App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest inValue = new App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest();
            inValue.Scan_StationTypeID = Scan_StationTypeID;
            inValue.LineID = LineID;
            inValue.DT_Unit = DT_Unit;
            inValue.S_Str = S_Str;
            App.MyMES.PartSelectService.GetRouteCheck_DiagramResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).GetRouteCheck_Diagram(inValue);
            S_OutputStateID = retVal.S_OutputStateID;
            return retVal.GetRouteCheck_DiagramResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetRouteCheck_DiagramResponse> GetRouteCheck_DiagramAsync(App.MyMES.PartSelectService.GetRouteCheck_DiagramRequest request) {
            return base.Channel.GetRouteCheck_DiagramAsync(request);
        }
        
        public string AddmesReprintHistory(string PrintType, string SN, string StationID) {
            return base.Channel.AddmesReprintHistory(PrintType, SN, StationID);
        }
        
        public System.Threading.Tasks.Task<string> AddmesReprintHistoryAsync(string PrintType, string SN, string StationID) {
            return base.Channel.AddmesReprintHistoryAsync(PrintType, SN, StationID);
        }
        
        public System.Data.DataSet Get_WHExcel(string S_Start, string S_End, string FStatus) {
            return base.Channel.Get_WHExcel(S_Start, S_End, FStatus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_WHExcelAsync(string S_Start, string S_End, string FStatus) {
            return base.Channel.Get_WHExcelAsync(S_Start, S_End, FStatus);
        }
        
        public System.Data.DataSet GetRouteData(string LineID, string PartID, string PartFamilyID, string ProductionOrderID) {
            return base.Channel.GetRouteData(LineID, PartID, PartFamilyID, ProductionOrderID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRouteDataAsync(string LineID, string PartID, string PartFamilyID, string ProductionOrderID) {
            return base.Channel.GetRouteDataAsync(LineID, PartID, PartFamilyID, ProductionOrderID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_SN_ShellResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_SN_Shell(App.MyMES.PartSelectService.Get_SN_ShellRequest request) {
            return base.Channel.Get_SN_Shell(request);
        }
        
        public System.Data.DataSet Get_SN_Shell(string FGSN, ref string strOutput) {
            App.MyMES.PartSelectService.Get_SN_ShellRequest inValue = new App.MyMES.PartSelectService.Get_SN_ShellRequest();
            inValue.FGSN = FGSN;
            inValue.strOutput = strOutput;
            App.MyMES.PartSelectService.Get_SN_ShellResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_SN_Shell(inValue);
            strOutput = retVal.strOutput;
            return retVal.Get_SN_ShellResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_SN_ShellResponse> Get_SN_ShellAsync(App.MyMES.PartSelectService.Get_SN_ShellRequest request) {
            return base.Channel.Get_SN_ShellAsync(request);
        }
        
        public System.Data.DataSet GetIpad_BB() {
            return base.Channel.GetIpad_BB();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIpad_BBAsync() {
            return base.Channel.GetIpad_BBAsync();
        }
        
        public string GetFirstStationType(string S_MachineSN) {
            return base.Channel.GetFirstStationType(S_MachineSN);
        }
        
        public System.Threading.Tasks.Task<string> GetFirstStationTypeAsync(string S_MachineSN) {
            return base.Channel.GetFirstStationTypeAsync(S_MachineSN);
        }
        
        public System.Data.DataSet GetSNToUnit(string S_SN) {
            return base.Channel.GetSNToUnit(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSNToUnitAsync(string S_SN) {
            return base.Channel.GetSNToUnitAsync(S_SN);
        }
        
        public string uspUpdateBox(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight) {
            return base.Channel.uspUpdateBox(PartID, ProductionOrderID, S_CartonSN, loginList, boxWeight);
        }
        
        public System.Threading.Tasks.Task<string> uspUpdateBoxAsync(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight) {
            return base.Channel.uspUpdateBoxAsync(PartID, ProductionOrderID, S_CartonSN, loginList, boxWeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailResponse App.MyMES.PartSelectService.IPartSelectSVC.GetMesPartAndPartFamilyDetail(App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest request) {
            return base.Channel.GetMesPartAndPartFamilyDetail(request);
        }
        
        public System.Data.DataSet GetMesPartAndPartFamilyDetail(int PartId, string PartDetailDefName, string PartFamilyDetailDefName, out string result) {
            App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest inValue = new App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest();
            inValue.PartId = PartId;
            inValue.PartDetailDefName = PartDetailDefName;
            inValue.PartFamilyDetailDefName = PartFamilyDetailDefName;
            App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).GetMesPartAndPartFamilyDetail(inValue);
            result = retVal.result;
            return retVal.GetMesPartAndPartFamilyDetailResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailResponse> GetMesPartAndPartFamilyDetailAsync(App.MyMES.PartSelectService.GetMesPartAndPartFamilyDetailRequest request) {
            return base.Channel.GetMesPartAndPartFamilyDetailAsync(request);
        }
        
        public string GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        public System.Threading.Tasks.Task<string> GetServerDateTimeAsync() {
            return base.Channel.GetServerDateTimeAsync();
        }
        
        public string GetSampleCount(string startTime, string endTime, bool type, int stationId) {
            return base.Channel.GetSampleCount(startTime, endTime, type, stationId);
        }
        
        public System.Threading.Tasks.Task<string> GetSampleCountAsync(string startTime, string endTime, bool type, int stationId) {
            return base.Channel.GetSampleCountAsync(startTime, endTime, type, stationId);
        }
        
        public string GetProductOrder(string barcode, int type) {
            return base.Channel.GetProductOrder(barcode, type);
        }
        
        public System.Threading.Tasks.Task<string> GetProductOrderAsync(string barcode, int type) {
            return base.Channel.GetProductOrderAsync(barcode, type);
        }
        
        public System.Data.DataSet GetProductDataInfo(string barcode, int type) {
            return base.Channel.GetProductDataInfo(barcode, type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductDataInfoAsync(string barcode, int type) {
            return base.Channel.GetProductDataInfoAsync(barcode, type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailResponse App.MyMES.PartSelectService.IPartSelectSVC.GetMesStationAndStationTypeDetail(App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest request) {
            return base.Channel.GetMesStationAndStationTypeDetail(request);
        }
        
        public string GetMesStationAndStationTypeDetail(int StationId, string StationDetailDefName, string StationTypeDetailDefName, out string result) {
            App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest inValue = new App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest();
            inValue.StationId = StationId;
            inValue.StationDetailDefName = StationDetailDefName;
            inValue.StationTypeDetailDefName = StationTypeDetailDefName;
            App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).GetMesStationAndStationTypeDetail(inValue);
            result = retVal.result;
            return retVal.GetMesStationAndStationTypeDetailResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailResponse> GetMesStationAndStationTypeDetailAsync(App.MyMES.PartSelectService.GetMesStationAndStationTypeDetailRequest request) {
            return base.Channel.GetMesStationAndStationTypeDetailAsync(request);
        }
        
        public int GetBarcodeType(string barcode) {
            return base.Channel.GetBarcodeType(barcode);
        }
        
        public System.Threading.Tasks.Task<int> GetBarcodeTypeAsync(string barcode) {
            return base.Channel.GetBarcodeTypeAsync(barcode);
        }
        
        public System.Data.DataSet GetAndCheckUnitInfo(string barcode, string POID, string PartID) {
            return base.Channel.GetAndCheckUnitInfo(barcode, POID, PartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAndCheckUnitInfoAsync(string barcode, string POID, string PartID) {
            return base.Channel.GetAndCheckUnitInfoAsync(barcode, POID, PartID);
        }
        
        public string[] SnToPOID(string SN) {
            return base.Channel.SnToPOID(SN);
        }
        
        public System.Threading.Tasks.Task<string[]> SnToPOIDAsync(string SN) {
            return base.Channel.SnToPOIDAsync(SN);
        }
        
        public string uspUpdateBoxV2(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight) {
            return base.Channel.uspUpdateBoxV2(PartID, ProductionOrderID, S_CartonSN, loginList, boxWeight);
        }
        
        public System.Threading.Tasks.Task<string> uspUpdateBoxV2Async(string PartID, string ProductionOrderID, string S_CartonSN, App.Model.LoginList loginList, string boxWeight) {
            return base.Channel.uspUpdateBoxV2Async(PartID, ProductionOrderID, S_CartonSN, loginList, boxWeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.uspPalletPackagingV2Response App.MyMES.PartSelectService.IPartSelectSVC.uspPalletPackagingV2(App.MyMES.PartSelectService.uspPalletPackagingV2Request request) {
            return base.Channel.uspPalletPackagingV2(request);
        }
        
        public string uspPalletPackagingV2(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty, ref int boxCount) {
            App.MyMES.PartSelectService.uspPalletPackagingV2Request inValue = new App.MyMES.PartSelectService.uspPalletPackagingV2Request();
            inValue.PartID = PartID;
            inValue.ProductionOrderID = ProductionOrderID;
            inValue.S_CartonSN = S_CartonSN;
            inValue.S_PalletSN = S_PalletSN;
            inValue.loginList = loginList;
            inValue.PalletQty = PalletQty;
            inValue.boxCount = boxCount;
            App.MyMES.PartSelectService.uspPalletPackagingV2Response retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).uspPalletPackagingV2(inValue);
            boxCount = retVal.boxCount;
            return retVal.uspPalletPackagingV2Result;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.uspPalletPackagingV2Response> uspPalletPackagingV2Async(App.MyMES.PartSelectService.uspPalletPackagingV2Request request) {
            return base.Channel.uspPalletPackagingV2Async(request);
        }
        
        public System.Data.DataSet GetmesUnitTTBox(string S_SN) {
            return base.Channel.GetmesUnitTTBox(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitTTBoxAsync(string S_SN) {
            return base.Channel.GetmesUnitTTBoxAsync(S_SN);
        }
        
        public string GetAppSet(string S_SetName) {
            return base.Channel.GetAppSet(S_SetName);
        }
        
        public System.Threading.Tasks.Task<string> GetAppSetAsync(string S_SetName) {
            return base.Channel.GetAppSetAsync(S_SetName);
        }
        
        public int InsertmesScreenshot(App.Model.mesScreenshot model) {
            return base.Channel.InsertmesScreenshot(model);
        }
        
        public System.Threading.Tasks.Task<int> InsertmesScreenshotAsync(App.Model.mesScreenshot model) {
            return base.Channel.InsertmesScreenshotAsync(model);
        }
        
        public App.Model.mesScreenshot GetmesScreenshot(int id) {
            return base.Channel.GetmesScreenshot(id);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesScreenshot> GetmesScreenshotAsync(int id) {
            return base.Channel.GetmesScreenshotAsync(id);
        }
        
        public bool UpdateScreenshot(App.Model.mesScreenshot model) {
            return base.Channel.UpdateScreenshot(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateScreenshotAsync(App.Model.mesScreenshot model) {
            return base.Channel.UpdateScreenshotAsync(model);
        }
        
        public System.Data.DataSet ListmesScreenshot(string S_Where) {
            return base.Channel.ListmesScreenshot(S_Where);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListmesScreenshotAsync(string S_Where) {
            return base.Channel.ListmesScreenshotAsync(S_Where);
        }
        
        public double MyTest() {
            return base.Channel.MyTest();
        }
        
        public System.Threading.Tasks.Task<double> MyTestAsync() {
            return base.Channel.MyTestAsync();
        }
        
        public System.Data.DataSet P_DataSet(string S_Sql) {
            return base.Channel.P_DataSet(S_Sql);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> P_DataSetAsync(string S_Sql) {
            return base.Channel.P_DataSetAsync(S_Sql);
        }
        
        public string ExecSql(string S_Sql) {
            return base.Channel.ExecSql(S_Sql);
        }
        
        public System.Threading.Tasks.Task<string> ExecSqlAsync(string S_Sql) {
            return base.Channel.ExecSqlAsync(S_Sql);
        }
        
        public System.Data.DataSet GetluPartFamilyType() {
            return base.Channel.GetluPartFamilyType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluPartFamilyTypeAsync() {
            return base.Channel.GetluPartFamilyTypeAsync();
        }
        
        public string GetServerIP() {
            return base.Channel.GetServerIP();
        }
        
        public System.Threading.Tasks.Task<string> GetServerIPAsync() {
            return base.Channel.GetServerIPAsync();
        }
        
        public string GetDBName() {
            return base.Channel.GetDBName();
        }
        
        public System.Threading.Tasks.Task<string> GetDBNameAsync() {
            return base.Channel.GetDBNameAsync();
        }
        
        public System.Data.DataSet GetluPartFamily(string PartFamilyTypeID) {
            return base.Channel.GetluPartFamily(PartFamilyTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluPartFamilyAsync(string PartFamilyTypeID) {
            return base.Channel.GetluPartFamilyAsync(PartFamilyTypeID);
        }
        
        public System.Data.DataSet GetmesPart(string PartFamilyID) {
            return base.Channel.GetmesPart(PartFamilyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartAsync(string PartFamilyID) {
            return base.Channel.GetmesPartAsync(PartFamilyID);
        }
        
        public System.Data.DataSet GetmesPartDetail(int PartID, string PartDetailDefName) {
            return base.Channel.GetmesPartDetail(PartID, PartDetailDefName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartDetailAsync(int PartID, string PartDetailDefName) {
            return base.Channel.GetmesPartDetailAsync(PartID, PartDetailDefName);
        }
        
        public System.Data.DataSet GetluPODetailDef(int ProductionOrderID, string PODetailDef) {
            return base.Channel.GetluPODetailDef(ProductionOrderID, PODetailDef);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluPODetailDefAsync(int ProductionOrderID, string PODetailDef) {
            return base.Channel.GetluPODetailDefAsync(ProductionOrderID, PODetailDef);
        }
        
        public System.Data.DataSet GetmesPartPrint() {
            return base.Channel.GetmesPartPrint();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesPartPrintAsync() {
            return base.Channel.GetmesPartPrintAsync();
        }
        
        public string mesGetSNFormatIDByList(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID) {
            return base.Channel.mesGetSNFormatIDByList(PartID, PartFamilyID, LineID, ProductionOrderID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<string> mesGetSNFormatIDByListAsync(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID) {
            return base.Channel.mesGetSNFormatIDByListAsync(PartID, PartFamilyID, LineID, ProductionOrderID, StationTypeID);
        }
        
        public System.Data.DataSet GetmesLine() {
            return base.Channel.GetmesLine();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesLineAsync() {
            return base.Channel.GetmesLineAsync();
        }
        
        public System.Data.DataSet mesLineGroup(string LineType, int PartFamilyTypeID) {
            return base.Channel.mesLineGroup(LineType, PartFamilyTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> mesLineGroupAsync(string LineType, int PartFamilyTypeID) {
            return base.Channel.mesLineGroupAsync(LineType, PartFamilyTypeID);
        }
        
        public System.Data.DataSet GetsysStatus() {
            return base.Channel.GetsysStatus();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetsysStatusAsync() {
            return base.Channel.GetsysStatusAsync();
        }
        
        public System.Data.DataSet GetmesStationType() {
            return base.Channel.GetmesStationType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationTypeAsync() {
            return base.Channel.GetmesStationTypeAsync();
        }
        
        public System.Data.DataSet GetmesRoute() {
            return base.Channel.GetmesRoute();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesRouteAsync() {
            return base.Channel.GetmesRouteAsync();
        }
        
        public System.Data.DataSet GetRouteSequence(string RouteID, string StationTypeID) {
            return base.Channel.GetRouteSequence(RouteID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRouteSequenceAsync(string RouteID, string StationTypeID) {
            return base.Channel.GetRouteSequenceAsync(RouteID, StationTypeID);
        }
        
        public System.Data.DataSet GetmesStation(string LineID) {
            return base.Channel.GetmesStation(LineID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationAsync(string LineID) {
            return base.Channel.GetmesStationAsync(LineID);
        }
        
        public System.Data.DataSet GetmesStation2(string StationTypeID, string LineID) {
            return base.Channel.GetmesStation2(StationTypeID, LineID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesStation2Async(string StationTypeID, string LineID) {
            return base.Channel.GetmesStation2Async(StationTypeID, LineID);
        }
        
        public System.Data.DataSet GetmesStationTypeByStationID(string StationID) {
            return base.Channel.GetmesStationTypeByStationID(StationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesStationTypeByStationIDAsync(string StationID) {
            return base.Channel.GetmesStationTypeByStationIDAsync(StationID);
        }
        
        public System.Data.DataSet GetluSerialNumberType() {
            return base.Channel.GetluSerialNumberType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluSerialNumberTypeAsync() {
            return base.Channel.GetluSerialNumberTypeAsync();
        }
        
        public System.Data.DataSet GetUnit(string PartID) {
            return base.Channel.GetUnit(PartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUnitAsync(string PartID) {
            return base.Channel.GetUnitAsync(PartID);
        }
        
        public System.Data.DataSet GetUnit2(string PartID, string StationID, string POID) {
            return base.Channel.GetUnit2(PartID, StationID, POID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUnit2Async(string PartID, string StationID, string POID) {
            return base.Channel.GetUnit2Async(PartID, StationID, POID);
        }
        
        public System.Data.DataSet GetMachineHistory(string S_UnitID) {
            return base.Channel.GetMachineHistory(S_UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMachineHistoryAsync(string S_UnitID) {
            return base.Channel.GetMachineHistoryAsync(S_UnitID);
        }
        
        public System.Data.DataSet GetUnit_Search(string S_DateStart, string S_DateEnd, string S_Where) {
            return base.Channel.GetUnit_Search(S_DateStart, S_DateEnd, S_Where);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUnit_SearchAsync(string S_DateStart, string S_DateEnd, string S_Where) {
            return base.Channel.GetUnit_SearchAsync(S_DateStart, S_DateEnd, S_Where);
        }
        
        public System.Data.DataSet GetUnitComponent(string S_UnitID) {
            return base.Channel.GetUnitComponent(S_UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUnitComponentAsync(string S_UnitID) {
            return base.Channel.GetUnitComponentAsync(S_UnitID);
        }
        
        public System.Data.DataSet GetmesUnitDetail(string S_UnitID) {
            return base.Channel.GetmesUnitDetail(S_UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitDetailAsync(string S_UnitID) {
            return base.Channel.GetmesUnitDetailAsync(S_UnitID);
        }
        
        public System.Data.DataSet GetHistory(string UnitID) {
            return base.Channel.GetHistory(UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHistoryAsync(string UnitID) {
            return base.Channel.GetHistoryAsync(UnitID);
        }
        
        public System.Data.DataSet GetmesUnitState(string S_PartID, string PartFamilyID, string S_RouteSequence, string LineID, int StationTypeID, string ProductionOrderID, string StatusID) {
            return base.Channel.GetmesUnitState(S_PartID, PartFamilyID, S_RouteSequence, LineID, StationTypeID, ProductionOrderID, StatusID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitStateAsync(string S_PartID, string PartFamilyID, string S_RouteSequence, string LineID, int StationTypeID, string ProductionOrderID, string StatusID) {
            return base.Channel.GetmesUnitStateAsync(S_PartID, PartFamilyID, S_RouteSequence, LineID, StationTypeID, ProductionOrderID, StatusID);
        }
        
        public System.Data.DataSet GetmesUnitState_Diagram(string S_PartID, string PartFamilyID, string LineID, int StationTypeID, string ProductionOrderID) {
            return base.Channel.GetmesUnitState_Diagram(S_PartID, PartFamilyID, LineID, StationTypeID, ProductionOrderID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitState_DiagramAsync(string S_PartID, string PartFamilyID, string LineID, int StationTypeID, string ProductionOrderID) {
            return base.Channel.GetmesUnitState_DiagramAsync(S_PartID, PartFamilyID, LineID, StationTypeID, ProductionOrderID);
        }
        
        public System.Data.DataSet GetmesSerialNumberOfLine(string SNCategory, string PrintCount) {
            return base.Channel.GetmesSerialNumberOfLine(SNCategory, PrintCount);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberOfLineAsync(string SNCategory, string PrintCount) {
            return base.Channel.GetmesSerialNumberOfLineAsync(SNCategory, PrintCount);
        }
        
        public System.Data.DataSet GetmesSerialNumberByUnitID(string UnitID) {
            return base.Channel.GetmesSerialNumberByUnitID(UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberByUnitIDAsync(string UnitID) {
            return base.Channel.GetmesSerialNumberByUnitIDAsync(UnitID);
        }
        
        public System.Data.DataSet GetPO(string S_PartID, string S_StatusID) {
            return base.Channel.GetPO(S_PartID, S_StatusID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPOAsync(string S_PartID, string S_StatusID) {
            return base.Channel.GetPOAsync(S_PartID, S_StatusID);
        }
        
        public System.Data.DataSet GetPOAll(string S_PartID, string S_LineID) {
            return base.Channel.GetPOAll(S_PartID, S_LineID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPOAllAsync(string S_PartID, string S_LineID) {
            return base.Channel.GetPOAllAsync(S_PartID, S_LineID);
        }
        
        public int GetRouteID(string LineID, string PartID, string PartFamilyID, string ProductionOrderID) {
            return base.Channel.GetRouteID(LineID, PartID, PartFamilyID, ProductionOrderID);
        }
        
        public System.Threading.Tasks.Task<int> GetRouteIDAsync(string LineID, string PartID, string PartFamilyID, string ProductionOrderID) {
            return base.Channel.GetRouteIDAsync(LineID, PartID, PartFamilyID, ProductionOrderID);
        }
        
        public System.Data.DataSet GetRoute(string S_RouteSequence, int I_RouteID) {
            return base.Channel.GetRoute(S_RouteSequence, I_RouteID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRouteAsync(string S_RouteSequence, int I_RouteID) {
            return base.Channel.GetRouteAsync(S_RouteSequence, I_RouteID);
        }
        
        public System.Data.DataSet GetApplicationType(string StationTypeID) {
            return base.Channel.GetApplicationType(StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetApplicationTypeAsync(string StationTypeID) {
            return base.Channel.GetApplicationTypeAsync(StationTypeID);
        }
        
        public System.Data.DataSet GetluDefect(int DefectTypeID) {
            return base.Channel.GetluDefect(DefectTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluDefectAsync(int DefectTypeID) {
            return base.Channel.GetluDefectAsync(DefectTypeID);
        }
        
        public System.Data.DataSet GetluUnitStatus() {
            return base.Channel.GetluUnitStatus();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetluUnitStatusAsync() {
            return base.Channel.GetluUnitStatusAsync();
        }
        
        public System.Data.DataSet GetmesUnitDefect(string S_UnitID) {
            return base.Channel.GetmesUnitDefect(S_UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitDefectAsync(string S_UnitID) {
            return base.Channel.GetmesUnitDefectAsync(S_UnitID);
        }
        
        public System.Data.DataSet uspSNRGetNext(string strSNFormat, int ReuseSNByStation, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strNextSN) {
            return base.Channel.uspSNRGetNext(strSNFormat, ReuseSNByStation, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strNextSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> uspSNRGetNextAsync(string strSNFormat, int ReuseSNByStation, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strNextSN) {
            return base.Channel.uspSNRGetNextAsync(strSNFormat, ReuseSNByStation, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strNextSN);
        }
        
        public System.Data.DataSet GetPartDetailDef(string SN) {
            return base.Channel.GetPartDetailDef(SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPartDetailDefAsync(string SN) {
            return base.Channel.GetPartDetailDefAsync(SN);
        }
        
        public string Get_MachineRouteMap(string S_ToolSN, string S_ProductPartID, string S_RouteID, string S_StationTypeID) {
            return base.Channel.Get_MachineRouteMap(S_ToolSN, S_ProductPartID, S_RouteID, S_StationTypeID);
        }
        
        public System.Threading.Tasks.Task<string> Get_MachineRouteMapAsync(string S_ToolSN, string S_ProductPartID, string S_RouteID, string S_StationTypeID) {
            return base.Channel.Get_MachineRouteMapAsync(S_ToolSN, S_ProductPartID, S_RouteID, S_StationTypeID);
        }
        
        public string GetRouteCheck(int Scan_StationTypeID, int Scan_StationID, string LineID, System.Data.DataTable DT_Unit, string S_Str) {
            return base.Channel.GetRouteCheck(Scan_StationTypeID, Scan_StationID, LineID, DT_Unit, S_Str);
        }
        
        public System.Threading.Tasks.Task<string> GetRouteCheckAsync(int Scan_StationTypeID, int Scan_StationID, string LineID, System.Data.DataTable DT_Unit, string S_Str) {
            return base.Channel.GetRouteCheckAsync(Scan_StationTypeID, Scan_StationID, LineID, DT_Unit, S_Str);
        }
        
        public System.Data.DataSet Get_UnitID(string S_SN) {
            return base.Channel.Get_UnitID(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_UnitIDAsync(string S_SN) {
            return base.Channel.Get_UnitIDAsync(S_SN);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_CreateMesSNResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_CreateMesSN(App.MyMES.PartSelectService.Get_CreateMesSNRequest request) {
            return base.Channel.Get_CreateMesSN(request);
        }
        
        public string Get_CreateMesSN(string strSNFormat, App.Model.LoginList loginList, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, int number, ref System.Data.DataSet dsSN) {
            App.MyMES.PartSelectService.Get_CreateMesSNRequest inValue = new App.MyMES.PartSelectService.Get_CreateMesSNRequest();
            inValue.strSNFormat = strSNFormat;
            inValue.loginList = loginList;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.v_mesUnit = v_mesUnit;
            inValue.number = number;
            inValue.dsSN = dsSN;
            App.MyMES.PartSelectService.Get_CreateMesSNResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_CreateMesSN(inValue);
            dsSN = retVal.dsSN;
            return retVal.Get_CreateMesSNResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMesSNResponse> Get_CreateMesSNAsync(App.MyMES.PartSelectService.Get_CreateMesSNRequest request) {
            return base.Channel.Get_CreateMesSNAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.Get_CreateMesSN_NewResponse App.MyMES.PartSelectService.IPartSelectSVC.Get_CreateMesSN_New(App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest request) {
            return base.Channel.Get_CreateMesSN_New(request);
        }
        
        public string Get_CreateMesSN_New(string strSNFormat, App.Model.LoginList loginList, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, App.Model.mesUnit v_mesUnit, int number, ref System.Data.DataSet dsSN) {
            App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest inValue = new App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest();
            inValue.strSNFormat = strSNFormat;
            inValue.loginList = loginList;
            inValue.xmlProdOrder = xmlProdOrder;
            inValue.xmlPart = xmlPart;
            inValue.xmlStation = xmlStation;
            inValue.xmlExtraData = xmlExtraData;
            inValue.v_mesUnit = v_mesUnit;
            inValue.number = number;
            inValue.dsSN = dsSN;
            App.MyMES.PartSelectService.Get_CreateMesSN_NewResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).Get_CreateMesSN_New(inValue);
            dsSN = retVal.dsSN;
            return retVal.Get_CreateMesSN_NewResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.Get_CreateMesSN_NewResponse> Get_CreateMesSN_NewAsync(App.MyMES.PartSelectService.Get_CreateMesSN_NewRequest request) {
            return base.Channel.Get_CreateMesSN_NewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.MyMES.PartSelectService.BoxSnToBatchResponse App.MyMES.PartSelectService.IPartSelectSVC.BoxSnToBatch(App.MyMES.PartSelectService.BoxSnToBatchRequest request) {
            return base.Channel.BoxSnToBatch(request);
        }
        
        public System.Data.DataSet BoxSnToBatch(string S_BoxSN, out string S_Result) {
            App.MyMES.PartSelectService.BoxSnToBatchRequest inValue = new App.MyMES.PartSelectService.BoxSnToBatchRequest();
            inValue.S_BoxSN = S_BoxSN;
            App.MyMES.PartSelectService.BoxSnToBatchResponse retVal = ((App.MyMES.PartSelectService.IPartSelectSVC)(this)).BoxSnToBatch(inValue);
            S_Result = retVal.S_Result;
            return retVal.BoxSnToBatchResult;
        }
        
        public System.Threading.Tasks.Task<App.MyMES.PartSelectService.BoxSnToBatchResponse> BoxSnToBatchAsync(App.MyMES.PartSelectService.BoxSnToBatchRequest request) {
            return base.Channel.BoxSnToBatchAsync(request);
        }
        
        public int GetComponentCount(string ParentPartID, string StationTypeID) {
            return base.Channel.GetComponentCount(ParentPartID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<int> GetComponentCountAsync(string ParentPartID, string StationTypeID) {
            return base.Channel.GetComponentCountAsync(ParentPartID, StationTypeID);
        }
        
        public System.Data.DataSet GetmesUnitComponent(string UnitID, string ChildUnitID) {
            return base.Channel.GetmesUnitComponent(UnitID, ChildUnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitComponentAsync(string UnitID, string ChildUnitID) {
            return base.Channel.GetmesUnitComponentAsync(UnitID, ChildUnitID);
        }
        
        public System.Data.DataSet GetmesUnitComponent2(string UnitID) {
            return base.Channel.GetmesUnitComponent2(UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitComponent2Async(string UnitID) {
            return base.Channel.GetmesUnitComponent2Async(UnitID);
        }
        
        public System.Data.DataSet GetmesProductStructure(string ParentPartID, string PartID, string StationTypeID) {
            return base.Channel.GetmesProductStructure(ParentPartID, PartID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructureAsync(string ParentPartID, string PartID, string StationTypeID) {
            return base.Channel.GetmesProductStructureAsync(ParentPartID, PartID, StationTypeID);
        }
        
        public System.Data.DataSet GetmesProductStructure1(string ParentPartID) {
            return base.Channel.GetmesProductStructure1(ParentPartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructure1Async(string ParentPartID) {
            return base.Channel.GetmesProductStructure1Async(ParentPartID);
        }
        
        public System.Data.DataSet GetmesProductStructure2(string ParentPartID, string StationTypeID) {
            return base.Channel.GetmesProductStructure2(ParentPartID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesProductStructure2Async(string ParentPartID, string StationTypeID) {
            return base.Channel.GetmesProductStructure2Async(ParentPartID, StationTypeID);
        }
        
        public System.Data.DataSet GetChildScanLast(string S_SN) {
            return base.Channel.GetChildScanLast(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChildScanLastAsync(string S_SN) {
            return base.Channel.GetChildScanLastAsync(S_SN);
        }
        
        public void ModPO(string S_POID) {
            base.Channel.ModPO(S_POID);
        }
        
        public System.Threading.Tasks.Task ModPOAsync(string S_POID) {
            return base.Channel.ModPOAsync(S_POID);
        }
        
        public void ModMachine(string S_SN, string StatusID, bool IsUpUnitDetail) {
            base.Channel.ModMachine(S_SN, StatusID, IsUpUnitDetail);
        }
        
        public System.Threading.Tasks.Task ModMachineAsync(string S_SN, string StatusID, bool IsUpUnitDetail) {
            return base.Channel.ModMachineAsync(S_SN, StatusID, IsUpUnitDetail);
        }
        
        public void ModMachine2(string ID, string StatusID) {
            base.Channel.ModMachine2(ID, StatusID);
        }
        
        public System.Threading.Tasks.Task ModMachine2Async(string ID, string StatusID) {
            return base.Channel.ModMachine2Async(ID, StatusID);
        }
        
        public System.Data.DataSet GetProductionOrder(string ID) {
            return base.Channel.GetProductionOrder(ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductionOrderAsync(string ID) {
            return base.Channel.GetProductionOrderAsync(ID);
        }
        
        public System.Data.DataSet GetMesPackageStatusID(string PalletSN) {
            return base.Channel.GetMesPackageStatusID(PalletSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMesPackageStatusIDAsync(string PalletSN) {
            return base.Channel.GetMesPackageStatusIDAsync(PalletSN);
        }
        
        public System.Data.DataSet GetmesSerialNumber(string S_SN) {
            return base.Channel.GetmesSerialNumber(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesSerialNumberAsync(string S_SN) {
            return base.Channel.GetmesSerialNumberAsync(S_SN);
        }
        
        public System.Data.DataSet GetmesUnit(string UnitID) {
            return base.Channel.GetmesUnit(UnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesUnitAsync(string UnitID) {
            return base.Channel.GetmesUnitAsync(UnitID);
        }
        
        public System.Data.DataSet GetComponent(int I_ChildUnitID) {
            return base.Channel.GetComponent(I_ChildUnitID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetComponentAsync(int I_ChildUnitID) {
            return base.Channel.GetComponentAsync(I_ChildUnitID);
        }
        
        public System.Data.DataSet GetmesMachine(string S_SN) {
            return base.Channel.GetmesMachine(S_SN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesMachineAsync(string S_SN) {
            return base.Channel.GetmesMachineAsync(S_SN);
        }
        
        public System.Data.DataSet GetmesRouteMachineMap(string MachineID, string MachineFamilyID) {
            return base.Channel.GetmesRouteMachineMap(MachineID, MachineFamilyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetmesRouteMachineMapAsync(string MachineID, string MachineFamilyID) {
            return base.Channel.GetmesRouteMachineMapAsync(MachineID, MachineFamilyID);
        }
        
        public System.Data.DataSet GetSNParameter(int PartID, int TemplateType) {
            return base.Channel.GetSNParameter(PartID, TemplateType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSNParameterAsync(int PartID, int TemplateType) {
            return base.Channel.GetSNParameterAsync(PartID, TemplateType);
        }
        
        public System.Data.DataSet GetLabels(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID) {
            return base.Channel.GetLabels(PartID, PartFamilyID, LineID, ProductionOrderID, StationTypeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLabelsAsync(string PartID, string PartFamilyID, string LineID, string ProductionOrderID, string StationTypeID) {
            return base.Channel.GetLabelsAsync(PartID, PartFamilyID, LineID, ProductionOrderID, StationTypeID);
        }
        
        public System.Data.DataSet GetLBLGenLabel(string S_SN, string S_LabelName) {
            return base.Channel.GetLBLGenLabel(S_SN, S_LabelName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLBLGenLabelAsync(string S_SN, string S_LabelName) {
            return base.Channel.GetLBLGenLabelAsync(S_SN, S_LabelName);
        }
        
        public System.Data.DataSet GetLabelName(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelName(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLabelNameAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelNameAsync(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public System.Data.DataSet GetLabelCMD(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelCMD(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLabelCMDAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelCMDAsync(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public string GetLabelID(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelID(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public System.Threading.Tasks.Task<string> GetLabelIDAsync(string StationTypeID, string PartFamilyID, string PartID, string ProductionOrderID, string LineID) {
            return base.Channel.GetLabelIDAsync(StationTypeID, PartFamilyID, PartID, ProductionOrderID, LineID);
        }
        
        public System.Data.DataSet LabelNameToLabelCMD(string S_LabelName) {
            return base.Channel.LabelNameToLabelCMD(S_LabelName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabelNameToLabelCMDAsync(string S_LabelName) {
            return base.Channel.LabelNameToLabelCMDAsync(S_LabelName);
        }
        
        public string BuckToFGSN(string S_BuckSN) {
            return base.Channel.BuckToFGSN(S_BuckSN);
        }
        
        public System.Threading.Tasks.Task<string> BuckToFGSNAsync(string S_BuckSN) {
            return base.Channel.BuckToFGSNAsync(S_BuckSN);
        }
        
        public System.Data.DataSet GetPLCSeting(string S_SetName, string S_StationID) {
            return base.Channel.GetPLCSeting(S_SetName, S_StationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPLCSetingAsync(string S_SetName, string S_StationID) {
            return base.Channel.GetPLCSetingAsync(S_SetName, S_StationID);
        }
        
        public string TimeCheck(string StationID, string S_SN) {
            return base.Channel.TimeCheck(StationID, S_SN);
        }
        
        public System.Threading.Tasks.Task<string> TimeCheckAsync(string StationID, string S_SN) {
            return base.Channel.TimeCheckAsync(StationID, S_SN);
        }
        
        public System.Data.DataSet GetPartParameter(string PartID) {
            return base.Channel.GetPartParameter(PartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPartParameterAsync(string PartID) {
            return base.Channel.GetPartParameterAsync(PartID);
        }
        
        public string GetluDefectType(string Description) {
            return base.Channel.GetluDefectType(Description);
        }
        
        public System.Threading.Tasks.Task<string> GetluDefectTypeAsync(string Description) {
            return base.Channel.GetluDefectTypeAsync(Description);
        }
        
        public string uspKitBoxCheck(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf) {
            return base.Channel.uspKitBoxCheck(S_FormatName, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strSNbuf);
        }
        
        public System.Threading.Tasks.Task<string> uspKitBoxCheckAsync(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf) {
            return base.Channel.uspKitBoxCheckAsync(S_FormatName, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strSNbuf);
        }
        
        public string uspKitBoxPackaging(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int BoxQty) {
            return base.Channel.uspKitBoxPackaging(PartID, ProductionOrderID, S_UPCSN, S_CartonSN, LoginList, BoxQty);
        }
        
        public System.Threading.Tasks.Task<string> uspKitBoxPackagingAsync(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int BoxQty) {
            return base.Channel.uspKitBoxPackagingAsync(PartID, ProductionOrderID, S_UPCSN, S_CartonSN, LoginList, BoxQty);
        }
        
        public string uspKitBoxPackagingNew(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int Allnumber, int CurrentQty, int BoxQty) {
            return base.Channel.uspKitBoxPackagingNew(PartID, ProductionOrderID, S_UPCSN, S_CartonSN, LoginList, Allnumber, CurrentQty, BoxQty);
        }
        
        public System.Threading.Tasks.Task<string> uspKitBoxPackagingNewAsync(string PartID, string ProductionOrderID, string S_UPCSN, string S_CartonSN, App.Model.LoginList LoginList, int Allnumber, int CurrentQty, int BoxQty) {
            return base.Channel.uspKitBoxPackagingNewAsync(PartID, ProductionOrderID, S_UPCSN, S_CartonSN, LoginList, Allnumber, CurrentQty, BoxQty);
        }
        
        public string uspPalletCheck(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf) {
            return base.Channel.uspPalletCheck(S_FormatName, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strSNbuf);
        }
        
        public System.Threading.Tasks.Task<string> uspPalletCheckAsync(string S_FormatName, string xmlProdOrder, string xmlPart, string xmlStation, string xmlExtraData, string strSNbuf) {
            return base.Channel.uspPalletCheckAsync(S_FormatName, xmlProdOrder, xmlPart, xmlStation, xmlExtraData, strSNbuf);
        }
        
        public string uspPalletPackaging(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty) {
            return base.Channel.uspPalletPackaging(PartID, ProductionOrderID, S_CartonSN, S_PalletSN, loginList, PalletQty);
        }
        
        public System.Threading.Tasks.Task<string> uspPalletPackagingAsync(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty) {
            return base.Channel.uspPalletPackagingAsync(PartID, ProductionOrderID, S_CartonSN, S_PalletSN, loginList, PalletQty);
        }
        
        public string uspPalletPackaging_Siemens(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty) {
            return base.Channel.uspPalletPackaging_Siemens(PartID, ProductionOrderID, S_CartonSN, S_PalletSN, loginList, PalletQty);
        }
        
        public System.Threading.Tasks.Task<string> uspPalletPackaging_SiemensAsync(string PartID, string ProductionOrderID, string S_CartonSN, string S_PalletSN, App.Model.LoginList loginList, int PalletQty) {
            return base.Channel.uspPalletPackaging_SiemensAsync(PartID, ProductionOrderID, S_CartonSN, S_PalletSN, loginList, PalletQty);
        }
        
        public System.Data.DataSet GetProductionOrderDetailDef(string ProductionOrderNumber) {
            return base.Channel.GetProductionOrderDetailDef(ProductionOrderNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductionOrderDetailDefAsync(string ProductionOrderNumber) {
            return base.Channel.GetProductionOrderDetailDefAsync(ProductionOrderNumber);
        }
    }
}
