//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.MyMES.mesUnitDetailService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="mesUnitDetailService.ImesUnitDetailSVC")]
    public interface ImesUnitDetailSVC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Insert", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/InsertResponse")]
        string Insert(App.Model.mesUnitDetail model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Insert", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/InsertResponse")]
        System.Threading.Tasks.Task<string> InsertAsync(App.Model.mesUnitDetail model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Delete", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Delete", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Update", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/UpdateResponse")]
        string Update(App.Model.mesUnitDetail model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Update", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(App.Model.mesUnitDetail model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Get", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/GetResponse")]
        App.Model.mesUnitDetail Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/Get", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/GetResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnitDetail> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/GetUnitDetail", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/GetUnitDetailResponse")]
        App.Model.mesUnitDetail GetUnitDetail(int unitid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/GetUnitDetail", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/GetUnitDetailResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnitDetail> GetUnitDetailAsync(int unitid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/ListAll", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/ListAllResponse")]
        App.Model.mesUnitDetail[] ListAll(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/ListAll", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/ListAllResponse")]
        System.Threading.Tasks.Task<App.Model.mesUnitDetail[]> ListAllAsync(string S_Where);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/MesGetBatchIDByBarcodeSN", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/MesGetBatchIDByBarcodeSNResponse")]
        System.Data.DataSet MesGetBatchIDByBarcodeSN(string BarcodeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/MesGetBatchIDByBarcodeSN", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/MesGetBatchIDByBarcodeSNResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> MesGetBatchIDByBarcodeSNAsync(string BarcodeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/MesGetFGSNByUPCSN", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/MesGetFGSNByUPCSNResponse")]
        string MesGetFGSNByUPCSN(string UPCSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/MesGetFGSNByUPCSN", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/MesGetFGSNByUPCSNResponse")]
        System.Threading.Tasks.Task<string> MesGetFGSNByUPCSNAsync(string UPCSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/UpdateKitSerialnumber", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/UpdateKitSerialnumberResponse")]
        void UpdateKitSerialnumber(int UnitID, string KitSerialnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImesUnitDetailSVC/UpdateKitSerialnumber", ReplyAction="http://tempuri.org/ImesUnitDetailSVC/UpdateKitSerialnumberResponse")]
        System.Threading.Tasks.Task UpdateKitSerialnumberAsync(int UnitID, string KitSerialnumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImesUnitDetailSVCChannel : App.MyMES.mesUnitDetailService.ImesUnitDetailSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImesUnitDetailSVCClient : System.ServiceModel.ClientBase<App.MyMES.mesUnitDetailService.ImesUnitDetailSVC>, App.MyMES.mesUnitDetailService.ImesUnitDetailSVC {
        
        public ImesUnitDetailSVCClient() {
        }
        
        public ImesUnitDetailSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImesUnitDetailSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImesUnitDetailSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImesUnitDetailSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insert(App.Model.mesUnitDetail model) {
            return base.Channel.Insert(model);
        }
        
        public System.Threading.Tasks.Task<string> InsertAsync(App.Model.mesUnitDetail model) {
            return base.Channel.InsertAsync(model);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public string Update(App.Model.mesUnitDetail model) {
            return base.Channel.Update(model);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(App.Model.mesUnitDetail model) {
            return base.Channel.UpdateAsync(model);
        }
        
        public App.Model.mesUnitDetail Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnitDetail> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public App.Model.mesUnitDetail GetUnitDetail(int unitid) {
            return base.Channel.GetUnitDetail(unitid);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnitDetail> GetUnitDetailAsync(int unitid) {
            return base.Channel.GetUnitDetailAsync(unitid);
        }
        
        public App.Model.mesUnitDetail[] ListAll(string S_Where) {
            return base.Channel.ListAll(S_Where);
        }
        
        public System.Threading.Tasks.Task<App.Model.mesUnitDetail[]> ListAllAsync(string S_Where) {
            return base.Channel.ListAllAsync(S_Where);
        }
        
        public System.Data.DataSet MesGetBatchIDByBarcodeSN(string BarcodeSN) {
            return base.Channel.MesGetBatchIDByBarcodeSN(BarcodeSN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MesGetBatchIDByBarcodeSNAsync(string BarcodeSN) {
            return base.Channel.MesGetBatchIDByBarcodeSNAsync(BarcodeSN);
        }
        
        public string MesGetFGSNByUPCSN(string UPCSN) {
            return base.Channel.MesGetFGSNByUPCSN(UPCSN);
        }
        
        public System.Threading.Tasks.Task<string> MesGetFGSNByUPCSNAsync(string UPCSN) {
            return base.Channel.MesGetFGSNByUPCSNAsync(UPCSN);
        }
        
        public void UpdateKitSerialnumber(int UnitID, string KitSerialnumber) {
            base.Channel.UpdateKitSerialnumber(UnitID, KitSerialnumber);
        }
        
        public System.Threading.Tasks.Task UpdateKitSerialnumberAsync(int UnitID, string KitSerialnumber) {
            return base.Channel.UpdateKitSerialnumberAsync(UnitID, KitSerialnumber);
        }
    }
}
